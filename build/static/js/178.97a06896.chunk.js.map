{"version":3,"file":"static/js/178.97a06896.chunk.js","mappings":"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","sources":["views/PM.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { CTable, CTableHead, CButton } from '@coreui/react'\r\nimport { MdDelete } from 'react-icons/md'\r\nimport { FaEdit } from 'react-icons/fa'\r\n// import QrReader from 'react-qr-reader'\r\n\r\nconst PmTable = () => {\r\n  const [pms, setPms] = useState([])\r\n  const [filteredPms, setFilteredPms] = useState([])\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n  const [scannedData, setScannedData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:4000/api/pm')\r\n      .then((response) => {\r\n        const pmData = Array.isArray(response.data) ? response.data : [response.data]\r\n        setPms(pmData)\r\n        setFilteredPms(pmData)\r\n        setLoading(false)\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error)\r\n        alert('Error fetching data')\r\n        setLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  const deleteData = (id) => {\r\n    const isConfirmed = window.confirm('Are you sure you want to delete this data?')\r\n    if (isConfirmed) {\r\n      axios\r\n        .delete(`http://localhost:4000/api/pm/${id}`)\r\n        .then((response) => {\r\n          const newPms = pms.filter((pm) => pm._id !== id)\r\n          setPms(newPms)\r\n          setFilteredPms(newPms)\r\n          setMessage('Data successfully deleted!')\r\n          setTimeout(() => {\r\n            setMessage('')\r\n          }, 2000)\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error deleting data:', error)\r\n          setMessage('Error deleting data. Please try again.')\r\n          setTimeout(() => {\r\n            setMessage('')\r\n          }, 2000)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleSearchChange = (e) => {\r\n    const query = e.target.value.toLowerCase()\r\n    const filteredPms = pms.filter((pm) => {\r\n      const locationLower = (pm.location || '').toLowerCase()\r\n      const assetNameLower = (pm.assetName || '').toLowerCase()\r\n      return locationLower.includes(query) || assetNameLower.includes(query)\r\n    })\r\n    setFilteredPms(filteredPms)\r\n    setSearchQuery(query)\r\n  }\r\n\r\n  const handleScan = (data) => {\r\n    if (data) {\r\n      setScannedData(data)\r\n    }\r\n  }\r\n\r\n  const handleError = (err) => {\r\n    console.error(err)\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NavLink to=\"/pmForm\">\r\n        <CButton color=\"info\" className=\"mb-2\" style={{ marginTop: '5px' }}>\r\n          Add New\r\n        </CButton>\r\n      </NavLink>\r\n      <label htmlFor=\"searchTask\" style={{ marginLeft: '70%' }}>\r\n        <span role=\"img\" aria-label=\"search-icon\"></span>\r\n      </label>\r\n      <input\r\n        placeholder=\"Search by Asset/Location\"\r\n        style={{\r\n          marginBottom: '10px',\r\n          padding: '8px',\r\n          border: '1px solid ',\r\n          borderRadius: '4px',\r\n          transition: 'border-color 0.3s ease-in-out, background-color 0.3s ease-in-out',\r\n        }}\r\n        value={searchQuery}\r\n        onChange={handleSearchChange}\r\n      />\r\n      <CTable bordered striped hover responsive>\r\n        <CTableHead color=\"dark\">\r\n          <tr>\r\n            <th style={{ textAlign: 'center' }}>Sr No</th>\r\n            <th style={{ textAlign: 'center' }}>Asset Name</th>\r\n            <th style={{ textAlign: 'center' }}>Asset Type</th>\r\n            <th style={{ textAlign: 'center' }}>Location</th>\r\n            <th style={{ textAlign: 'center' }}>PM Task Name</th>\r\n            <th style={{ textAlign: 'center' }}>PM Schedule Date</th>\r\n            <th style={{ textAlign: 'center' }}>Next Schedule Date</th>\r\n            <th style={{ textAlign: 'center' }}>Description</th>\r\n            <th style={{ textAlign: 'center' }}>PM Details</th>\r\n            <th style={{ textAlign: 'center' }}>Status</th>\r\n            <th style={{ textAlign: 'center' }}>QR Code</th>\r\n            <th style={{ textAlign: 'center' }}>Edit</th>\r\n            <th style={{ textAlign: 'center' }}>Delete</th>\r\n          </tr>\r\n        </CTableHead>\r\n        <tbody>\r\n          {loading ? (\r\n            <tr>\r\n              <td colSpan=\"13\" style={{ textAlign: 'center' }}>\r\n                <p>Loading...</p>\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            <>\r\n              {message && (\r\n                <tr>\r\n                  <td\r\n                    colSpan=\"13\"\r\n                    style={{ textAlign: 'center', fontStyle: 'italic', color: 'red' }}\r\n                  >\r\n                    {message}\r\n                  </td>\r\n                </tr>\r\n              )}\r\n              {filteredPms.map((pm, index) => (\r\n                <tr key={pm._id}>\r\n                  <td style={{ textAlign: 'center' }}>{index + 1}</td>\r\n                  <td style={{ textAlign: 'center' }}>{pm.assetName}</td>\r\n                  <td style={{ textAlign: 'center' }}>{pm.assetType}</td>\r\n                  <td style={{ textAlign: 'center' }}>{pm.location}</td>\r\n                  <td style={{ textAlign: 'center' }}>{pm.pmTaskName}</td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {new Date(pm.pmScheduleDate).toLocaleDateString()}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {new Date(pm.nextScheduleDate).toLocaleDateString()}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>{pm.description}</td>\r\n                  <td style={{ textAlign: 'center' }}>{pm.pmDetails}</td>\r\n                  <td style={{ textAlign: 'center' }}>{pm.status}</td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    {pm.qrCode && <img src={pm.qrCode} alt=\"QR Code\" width={50} height={50} />}\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    <NavLink to={`/editpm/${pm._id}`} style={{ color: '#000080' }}>\r\n                      <FaEdit />\r\n                    </NavLink>\r\n                  </td>\r\n                  <td style={{ textAlign: 'center' }}>\r\n                    <button\r\n                      className=\"btn\"\r\n                      onClick={() => deleteData(pm._id)}\r\n                      style={{ color: 'red' }}\r\n                    >\r\n                      <MdDelete />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </>\r\n          )}\r\n        </tbody>\r\n      </CTable>\r\n      <div>\r\n        {/* <QrReader\r\n          delay={300}\r\n          onError={handleError}\r\n          onScan={handleScan}\r\n          style={{ width: '300px' }}\r\n        /> */}\r\n        {scannedData && (\r\n          <div>\r\n            <h3>Scanned Data:</h3>\r\n            <p>{scannedData}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PmTable\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","pms","setPms","_useState3","_useState4","filteredPms","setFilteredPms","_useState5","_useState6","searchQuery","setSearchQuery","_useState7","_useState8","message","setMessage","_useState9","_useState10","loading","setLoading","_useState11","_useState12","scannedData","useEffect","axios","get","then","response","pmData","Array","isArray","data","catch","error","console","alert","_jsxs","className","children","_jsx","NavLink","to","CButton","color","style","marginTop","htmlFor","marginLeft","role","placeholder","marginBottom","padding","border","borderRadius","transition","value","onChange","e","query","target","toLowerCase","filter","pm","locationLower","location","assetNameLower","assetName","includes","CTable","bordered","striped","hover","responsive","CTableHead","textAlign","colSpan","_Fragment","fontStyle","map","index","assetType","pmTaskName","Date","pmScheduleDate","toLocaleDateString","nextScheduleDate","description","pmDetails","status","qrCode","src","alt","width","height","concat","_id","FaEdit","onClick","id","window","confirm","delete","newPms","setTimeout","MdDelete"],"sourceRoot":""}