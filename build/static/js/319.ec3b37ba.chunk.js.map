{"version":3,"file":"static/js/319.ec3b37ba.chunk.js","mappings":"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","sources":["views/assetTable/AssetTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { NavLink, useNavigate } from 'react-router-dom'\r\nimport { CTable, CTableHead, CButton } from '@coreui/react'\r\nimport { MdDelete } from 'react-icons/md'\r\nimport { FaEdit } from 'react-icons/fa'\r\nimport { QrReader } from '@blackbox-vision/react-qr-reader'\r\nimport './asset.css'\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table'\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nconst AssetTable = () => {\r\n  const [assets, setAssets] = useState([])\r\n  const [filteredAssets, setFilteredAssets] = useState([])\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [loading, setLoading] = useState(true)\r\n  const [showQrReader, setShowQrReader] = useState(false)\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('https://backendmaintenx.onrender.com/api/assets')\r\n      .then((response) => {\r\n        const assetsData = Array.isArray(response.data) ? response.data : [response.data]\r\n        setAssets(assetsData)\r\n        setFilteredAssets(assetsData)\r\n        setLoading(false)\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error)\r\n        alert('Error fetching data')\r\n        setLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  const deleteData = (id) => {\r\n    const isConfirmed = window.confirm('Are you sure you want to delete this data?')\r\n    if (isConfirmed) {\r\n      axios\r\n        .delete(`https://backendmaintenx.onrender.com/api/assets/${id}`)\r\n        .then(() => {\r\n          const newAssets = assets.filter((asset) => asset._id !== id)\r\n          setAssets(newAssets)\r\n          setFilteredAssets(newAssets)\r\n          setMessage('Data successfully deleted!')\r\n          setTimeout(() => {\r\n            setMessage('')\r\n          }, 2000)\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error deleting data:', error)\r\n          setMessage('Error deleting data. Please try again.')\r\n          setTimeout(() => {\r\n            setMessage('')\r\n          }, 2000)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleSearchChange = (e) => {\r\n    const query = e.target.value.toLowerCase()\r\n    const filteredAssets = assets.filter((asset) => {\r\n      const locationLower = (asset.Location || '').toLowerCase()\r\n      const assetNameLower = (asset.AssetName || '').toLowerCase()\r\n      return locationLower.includes(query) || assetNameLower.includes(query)\r\n    })\r\n    setFilteredAssets(filteredAssets)\r\n    setSearchQuery(query)\r\n  }\r\n\r\n  const handleResult = (result, error) => {\r\n    if (!!result) {\r\n      console.log('QR Code Result:', result.text)\r\n      navigate(`/assetRecord/${result.text}`)\r\n      setShowQrReader(false)\r\n    }\r\n\r\n    if (!!error) {\r\n      console.info(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NavLink to=\"/assetForm\">\r\n        <CButton\r\n          className=\"mb-2\"\r\n          style={{ marginTop: '5px', margin: '10px', backgroundColor: '#000026' }}\r\n        >\r\n          Add New\r\n        </CButton>\r\n      </NavLink>\r\n      {/* <CButton\r\n        style={{ marginTop: '5px', margin: '10px', backgroundColor: '#000026' }}\r\n        className=\"mb-2\"\r\n        onClick={() => setShowQrReader(!showQrReader)}\r\n      >\r\n        {showQrReader ? 'Close QR Scanner' : 'Scan QR Code'}\r\n      </CButton>\r\n      {showQrReader && (\r\n        <div style={{ width: '100%' }}>\r\n          <QrReader\r\n            onResult={handleResult}\r\n            constraints={{ facingMode: 'environment' }}\r\n            style={{ width: '100%' }}\r\n          />\r\n        </div>\r\n      )} */}\r\n      <label htmlFor=\"searchTask\" style={{ marginLeft: '60%' }}>\r\n        <span role=\"img\" aria-label=\"search-icon\"></span>\r\n      </label>\r\n      <input\r\n        placeholder=\"Search by Asset/Location\"\r\n        style={{\r\n          marginBottom: '10px',\r\n          padding: '8px',\r\n          border: '1px solid ',\r\n          borderRadius: '4px',\r\n          transition: 'border-color 0.3s ease-in-out, background-color 0.3s ease-in-out',\r\n        }}\r\n        value={searchQuery}\r\n        onChange={handleSearchChange}\r\n      />\r\n      <div className=\"table-container\">\r\n        <Table className=\"custom-table\">\r\n          <Thead>\r\n            <Tr>\r\n              <Th>Sr No</Th>\r\n              <Th>Machine Name</Th>\r\n              <Th>Machine Type</Th>\r\n              <Th>Location</Th>\r\n              <Th>QR Code</Th>\r\n              <Th>Edit</Th>\r\n              <Th>Delete</Th>\r\n            </Tr>\r\n          </Thead>\r\n          <Tbody>\r\n            {loading ? (\r\n              <Tr>\r\n                <Td colSpan=\"8\" style={{ textAlign: 'center' }}>\r\n                  <p>Loading...</p>\r\n                </Td>\r\n              </Tr>\r\n            ) : (\r\n              <>\r\n                {message && (\r\n                  <Tr>\r\n                    <Td\r\n                      colSpan=\"8\"\r\n                      style={{ textAlign: 'center', fontStyle: 'italic', color: 'red' }}\r\n                    >\r\n                      {message}\r\n                    </Td>\r\n                  </Tr>\r\n                )}\r\n                {filteredAssets.map((asset, index) => (\r\n                  <Tr key={asset._id}>\r\n                    <Td>{index + 1}</Td>\r\n                    <Td>{asset.AssetName}</Td>\r\n                    <Td>{asset.MachineType}</Td>\r\n                    <Td>{asset.Location}</Td>\r\n                    <Td>\r\n                      {asset.qrCode && (\r\n                        <img src={asset.qrCode} alt=\"QR Code\" width={50} height={50} />\r\n                      )}\r\n                    </Td>\r\n                    <Td>\r\n                      <NavLink to={`/editasset/${asset._id}`} style={{ color: '#000080' }}>\r\n                        <FaEdit />\r\n                      </NavLink>\r\n                    </Td>\r\n                    <Td>\r\n                      <button\r\n                        className=\"btn\"\r\n                        onClick={() => deleteData(asset._id)}\r\n                        style={{ color: 'red' }}\r\n                      >\r\n                        <MdDelete />\r\n                      </button>\r\n                    </Td>\r\n                  </Tr>\r\n                ))}\r\n              </>\r\n            )}\r\n          </Tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AssetTable\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","assets","setAssets","_useState3","_useState4","filteredAssets","setFilteredAssets","_useState5","_useState6","searchQuery","setSearchQuery","_useState7","_useState8","message","setMessage","_useState9","_useState10","loading","setLoading","_useState11","_useState12","useNavigate","useEffect","axios","get","then","response","assetsData","Array","isArray","data","catch","error","console","alert","_jsxs","className","children","_jsx","NavLink","to","CButton","style","marginTop","margin","backgroundColor","htmlFor","marginLeft","role","placeholder","marginBottom","padding","border","borderRadius","transition","value","onChange","e","query","target","toLowerCase","filter","asset","locationLower","Location","assetNameLower","AssetName","includes","Table","Thead","Tr","Th","Tbody","Td","colSpan","textAlign","_Fragment","fontStyle","color","map","index","MachineType","qrCode","src","alt","width","height","concat","_id","FaEdit","onClick","id","window","confirm","delete","newAssets","setTimeout","MdDelete"],"sourceRoot":""}