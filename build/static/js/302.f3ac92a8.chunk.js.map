{"version":3,"file":"static/js/302.f3ac92a8.chunk.js","mappings":"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","sources":["views/User/Users.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {\r\n  CTable,\r\n  CTableHead,\r\n  CTableBody,\r\n  CTableRow,\r\n  CTableHeaderCell,\r\n  CTableDataCell,\r\n  CButton,\r\n} from '@coreui/react'\r\nimport { FaEdit } from 'react-icons/fa'\r\nimport { MdDelete } from 'react-icons/md'\r\nimport loadingGif from '../assetTable/loader.gif'\r\nimport './user.css'\r\n\r\nexport default function Users() {\r\n  const [usernos, setUsers] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:5000/userInfo')\r\n      .then((response) => {\r\n        setUsers(response.data)\r\n        setLoading(false)\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching user data:', error)\r\n        setLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  const deleteData = (id) => {\r\n    const isConfirmed = window.confirm('Are you sure you want to delete this data?')\r\n    if (isConfirmed) {\r\n      axios\r\n        .delete(`http://localhost:5000/UserInfo/${id}`)\r\n        .then((response) => {\r\n          setUsers(usernos.filter((user) => user._id !== id))\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error deleting user:', error)\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NavLink to=\"/userForm\">\r\n        <CButton color=\"info\" className=\"mb-2\" style={{ marginTop: '5px' }}>\r\n          Add New\r\n        </CButton>\r\n      </NavLink>\r\n      {loading ? (\r\n        <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n          <img src={loadingGif} alt=\"Loading...\" />\r\n          <p>Loading...</p>\r\n        </div>\r\n      ) : (\r\n        <CTable\r\n          bordered\r\n          striped\r\n          hover\r\n          responsive\r\n          className=\"table-custom\"\r\n          style={{ backgroundColor: 'grey' }}\r\n        >\r\n          <CTableHead>\r\n            <CTableRow>\r\n              <CTableHeaderCell>Name</CTableHeaderCell>\r\n              <CTableHeaderCell>Phone Number</CTableHeaderCell>\r\n              <CTableHeaderCell>Address</CTableHeaderCell>\r\n              <CTableHeaderCell>Email</CTableHeaderCell>\r\n              <CTableHeaderCell>Location</CTableHeaderCell>\r\n              <CTableHeaderCell>Edit</CTableHeaderCell>\r\n              <CTableHeaderCell>Delete</CTableHeaderCell>\r\n            </CTableRow>\r\n          </CTableHead>\r\n          <CTableBody>\r\n            {usernos.map((user) => (\r\n              <CTableRow key={user._id}>\r\n                <CTableDataCell>{user.name}</CTableDataCell>\r\n                <CTableDataCell>{user.phoneNumber}</CTableDataCell>\r\n                <CTableDataCell>{user.address}</CTableDataCell>\r\n                <CTableDataCell>{user.email}</CTableDataCell>\r\n                <CTableDataCell>{user.Location}</CTableDataCell>\r\n                <CTableDataCell>\r\n                  <NavLink to={`/editUser/${user._id}`} className=\"btn-custom\">\r\n                    <FaEdit />\r\n                  </NavLink>\r\n                </CTableDataCell>\r\n                <CTableDataCell>\r\n                  <button onClick={() => deleteData(user._id)} className=\"btn-custom btn-delete\">\r\n                    <MdDelete />\r\n                  </button>\r\n                </CTableDataCell>\r\n              </CTableRow>\r\n            ))}\r\n          </CTableBody>\r\n        </CTable>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"],"names":["Users","_useState","useState","_useState2","_slicedToArray","usernos","setUsers","_useState3","_useState4","loading","setLoading","useNavigate","useEffect","axios","get","then","response","data","catch","error","console","_jsxs","className","children","_jsx","NavLink","to","CButton","color","style","marginTop","textAlign","src","loadingGif","alt","CTable","bordered","striped","hover","responsive","backgroundColor","CTableHead","CTableRow","CTableHeaderCell","CTableBody","map","user","CTableDataCell","name","phoneNumber","address","email","Location","concat","_id","FaEdit","onClick","id","window","confirm","delete","filter","MdDelete"],"sourceRoot":""}