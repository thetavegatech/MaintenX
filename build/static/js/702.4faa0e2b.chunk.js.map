{"version":3,"file":"static/js/702.4faa0e2b.chunk.js","mappings":"wSAOe,SAASA,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACjBC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA8CT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAA0Cb,EAAAA,EAAAA,UAAS,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAgCjB,EAAAA,EAAAA,UAAS,IAAGkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAkDrB,EAAAA,EAAAA,UAAS,IAAGsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAC9DE,GADwBD,EAAA,GAAsBA,EAAA,IACUtB,EAAAA,EAAAA,UAAS,KAAGwB,GAAAtB,EAAAA,EAAAA,GAAAqB,EAAA,GACpEE,GAD2BD,EAAA,GAAyBA,EAAA,IACQxB,EAAAA,EAAAA,UAAS,KAAG0B,GAAAxB,EAAAA,EAAAA,GAAAuB,EAAA,GACxEE,GAD6BD,EAAA,GAA2BA,EAAA,IACU1B,EAAAA,EAAAA,UAAS,KAAG4B,GAAA1B,EAAAA,EAAAA,GAAAyB,EAAA,GAC9EE,GADgCD,EAAA,GAA8BA,EAAA,IACtB5B,EAAAA,EAAAA,UAAS,KAAG8B,GAAA5B,EAAAA,EAAAA,GAAA2B,EAAA,GACpDE,GADmBD,EAAA,GAAiBA,EAAA,IACsB9B,EAAAA,EAAAA,UAAS,KAAGgC,GAAA9B,EAAAA,EAAAA,GAAA6B,EAAA,GACtEE,GAD4BD,EAAA,GAA0BA,EAAA,IACFhC,EAAAA,EAAAA,UAAS,KAAGkC,GAAAhC,EAAAA,EAAAA,GAAA+B,EAAA,GAChEE,GADyBD,EAAA,GAAuBA,EAAA,IACAlC,EAAAA,EAAAA,UAAS,KAAGoC,GAAAlC,EAAAA,EAAAA,GAAAiC,EAAA,GAC5DE,GADuBD,EAAA,GAAqBA,EAAA,IACFpC,EAAAA,EAAAA,UAAS,KAAGsC,GAAApC,EAAAA,EAAAA,GAAAmC,EAAA,GAAhCE,GAAFD,EAAA,GAAkBA,EAAA,IACtCE,GAAoDxC,EAAAA,EAAAA,UAAS,IAAGyC,GAAAvC,EAAAA,EAAAA,GAAAsC,EAAA,GAChEE,GADyBD,EAAA,GAAuBA,EAAA,IACUzC,EAAAA,EAAAA,UAAS,KAAG2C,GAAAzC,EAAAA,EAAAA,GAAAwC,EAAA,GACtEE,GAD4BD,EAAA,GAA0BA,EAAA,IACsB3C,EAAAA,EAAAA,UAAS,KAAG6C,GAAA3C,EAAAA,EAAAA,GAAA0C,EAAA,GAAjFE,GAA8BD,EAAA,GACrCE,IADwEF,EAAA,IAEtE7C,EAAAA,EAAAA,UAAS,KAAGgD,IAAA9C,EAAAA,EAAAA,GAAA6C,GAAA,GADPE,GAAqCD,GAAA,GAAEE,GAAwCF,GAAA,GAEtFG,IAAoDnD,EAAAA,EAAAA,UAAS,IAAGoD,IAAAlD,EAAAA,EAAAA,GAAAiD,GAAA,GAChEE,IADyBD,GAAA,GAAuBA,GAAA,IACpBpD,EAAAA,EAAAA,UAAS,KAAGsD,IAAApD,EAAAA,EAAAA,GAAAmD,GAAA,GAAjCE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GACxBG,IAAsCzD,EAAAA,EAAAA,UAAS,IAAG0D,IAAAxD,EAAAA,EAAAA,GAAAuD,GAAA,GAA3CE,GAAWD,GAAA,GAClBE,IADkCF,GAAA,IACM1D,EAAAA,EAAAA,UAAS,KAAG6D,IAAA3D,EAAAA,EAAAA,GAAA0D,GAAA,GACpDE,IADmBD,GAAA,GAAiBA,GAAA,IACI7D,EAAAA,EAAAA,UAAS,KAAG+D,IAAA7D,EAAAA,EAAAA,GAAA4D,GAAA,GACpDE,IADmBD,GAAA,GAAiBA,GAAA,IACI/D,EAAAA,EAAAA,UAAS,KAAGiE,IAAA/D,EAAAA,EAAAA,GAAA8D,GAAA,GACpDE,IADmBD,GAAA,GAAiBA,GAAA,IACcjE,EAAAA,EAAAA,UAAS,KAAGmE,IAAAjE,EAAAA,EAAAA,GAAAgE,GAAA,GAC9DE,IADwBD,GAAA,GAAsBA,GAAA,IACDnE,EAAAA,EAAAA,UAAS,KAAGqE,IAAAnE,EAAAA,EAAAA,GAAAkE,GAAA,GACzDE,IADsBD,GAAA,GAAmBA,GAAA,IACSrE,EAAAA,EAAAA,UAAS,KAAGuE,IAAArE,EAAAA,EAAAA,GAAAoE,GAAA,GAC9DE,IADwBD,GAAA,GAAsBA,GAAA,IACwCvE,EAAAA,EAAAA,UAAS,KAAGyE,IAAAvE,EAAAA,EAAAA,GAAAsE,GAAA,GAClGE,IAD0CD,GAAA,GAAwCA,GAAA,IACdzE,EAAAA,EAAAA,UAAS,KAAG2E,IAAAzE,EAAAA,EAAAA,GAAAwE,GAAA,GAChFE,IADiCD,GAAA,GAA+BA,GAAA,IAC9B3E,EAAAA,EAAAA,UAAS,KAAG6E,IAAA3E,EAAAA,EAAAA,GAAA0E,GAAA,GAAvCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAA0BhF,EAAAA,EAAAA,UAAS,IAAGiF,IAAA/E,EAAAA,EAAAA,GAAA8E,GAAA,GAA/BE,GAAKD,GAAA,GAAEE,GAAQF,GAAA,GACtBG,IAAkCpF,EAAAA,EAAAA,UAAS,IAAGqF,IAAAnF,EAAAA,EAAAA,GAAAkF,GAAA,GAAvCE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAAgCxF,EAAAA,EAAAA,UAAS,IAAGyF,IAAAvF,EAAAA,EAAAA,GAAAsF,GAAA,GAArCE,GAAQD,GAAA,GAAEE,GAAWF,GAAA,GAC5BG,IAA4C5F,EAAAA,EAAAA,UAAS,IAAG6F,IAAA3F,EAAAA,EAAAA,GAAA0F,GAAA,GACxDE,IADqBD,GAAA,GAAmBA,GAAA,IAChB7F,EAAAA,EAAAA,UAAS,OAAK+F,IAAA7F,EAAAA,EAAAA,GAAA4F,GAAA,GAA3BC,GAAA,GAASA,GAAA,IAMpBC,EAAAA,EAAAA,YAAU,WACRC,IACF,GAAG,IAeH,IAAMA,GAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAESC,EAAAA,EAAMC,IAAI,+CAADC,OAAgDnH,IAAK,OAA/E4G,EAAQE,EAAAM,KACdC,QAAQC,IAAIV,GACZnG,EAAamG,EAASW,KAAK/G,WAC3BK,EAAY+F,EAASW,KAAK3G,UAC1BK,EAAmB2F,EAASW,KAAKvG,iBACjCK,EAAiBuF,EAASW,KAAKnG,eAC/BK,EAAYmF,EAASW,KAAK/F,UAC1BoB,EAAiBgE,EAASW,KAAKC,eAC/BpC,GAAawB,EAASW,KAAKpC,WAC3BK,GAASoB,EAASW,KAAKhC,OACvBK,GAAa6B,GAAWb,EAASW,KAAK5B,YACtCK,GAAYyB,GAAWb,EAASW,KAAKxB,WACrClC,GAAU+C,EAASW,KAAK3D,QAAOkD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAE/BO,QAAQM,MAAM,uBAAsBb,EAAAY,IAAQ,yBAAAZ,EAAAc,OAAA,GAAAjB,EAAA,mBAE/C,kBAlBc,OAAAJ,EAAAsB,MAAA,KAAAC,UAAA,KA2DTL,GAAa,SAACM,GAElB,OADmB,IAAIC,KAAKD,GACVE,mBAAmB,QAAS,CAC5CC,KAAM,UACNC,MAAO,UACPC,IAAK,WAET,EAEA,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OACEG,UAAU,eACVC,MAAO,CACLC,OAAQ,iBACRC,gBAAiB,GACjBC,QAAS,OACTC,aAAc,OACdC,UAAW,+BACXC,MAAO,QACPR,UAGFF,EAAAA,EAAAA,KAAA,OAAAE,UACES,EAAAA,EAAAA,MAAA,QAAMC,SA/DC,SAACC,GACdA,EAAEC,iBACFlC,EAAAA,EACGmC,IAAI,+CAADjC,OAAgDnH,GAAM,CACxDQ,UAAAA,EACAI,SAAAA,EACAI,gBAAAA,EACAI,cAAAA,EACAI,SAAAA,EACAwC,YAAAA,GACAb,+BAAAA,GACAG,sCAAAA,GACA6B,UAAAA,GACAvB,OAAAA,GACA2B,MAAAA,GACAI,UAAAA,GACAI,SAAAA,KAEDsD,MAAK,SAACC,GACLjC,QAAQC,IAAIgC,GACZ7I,EAAa,IACbI,EAAY,IACZI,EAAmB,IACnBI,EAAiB,IACjBI,EAAY,IACZmE,GAAa,IACbrC,GAAyC,IACzCyC,GAAY,IACZnC,GAAU,IACV2B,GAAS,IACTQ,GAAY,IAIZ9F,GAAU,EACZ,IACCqJ,OAAM,SAACC,GAAG,OAAKnC,QAAQC,IAAIkC,EAAI,GACpC,EA0B+BjB,SAAA,EACrBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBACfQ,EAAAA,EAAAA,MAAA,OAAKR,UAAU,aAAYD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOoB,QAAQ,WAAUlB,SAAC,gBAC1BF,EAAAA,EAAAA,KAAA,SACEqB,UAAQ,EACRC,KAAK,OACLnB,UAAU,eACVoB,KAAK,WACL5J,GAAG,WAEH6J,MAAOjJ,EACPkJ,SAAU,SAACZ,GAAC,OAAKrI,EAAYqI,EAAEa,OAAOF,MAAM,QAGhDb,EAAAA,EAAAA,MAAA,OAAKR,UAAU,aAAYD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOoB,QAAQ,mBAAkBlB,SAAC,kBAClCF,EAAAA,EAAAA,KAAA,YACEG,UAAU,eACVkB,UAAQ,EAER1J,GAAG,kBACHgK,aAAc,GACdJ,KAAK,kBACLC,MAAO7I,EACP8I,SAAU,SAACZ,GAAC,OAAKjI,EAAmBiI,EAAEa,OAAOF,MAAM,QAGvDb,EAAAA,EAAAA,MAAA,OAAKR,UAAU,aAAYD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOoB,QAAQ,YAAWlB,SAAC,kBAC3BF,EAAAA,EAAAA,KAAA,SACEsB,KAAK,OACLnB,UAAU,eACVxI,GAAG,YAEH4J,KAAK,YACLC,MAAOlE,GACP+D,UAAQ,QAGZV,EAAAA,EAAAA,MAAA,OAAKR,UAAU,aAAYD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOoB,QAAQ,YAAWlB,SAAC,iBAC3BF,EAAAA,EAAAA,KAAA,SACEsB,KAAK,OACLnB,UAAU,eACVxI,GAAG,WAEH4J,KAAK,WACLC,MAAO9D,GACP+D,SAAU,SAACZ,GAAC,OAAKlD,GAAYkD,EAAEa,OAAOF,MAAM,QAGhDb,EAAAA,EAAAA,MAAA,OAAKR,UAAU,aAAYD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOoB,QAAQ,uBAAsBlB,SAAC,gDAGtCS,EAAAA,EAAAA,MAAA,UACEU,UAAQ,EACRlB,UAAU,eAEVxI,GAAG,uBACH4J,KAAK,wCACLC,MAAOvG,GACPwG,SAAU,SAACZ,GAAC,OAAK3F,GAAyC2F,EAAEa,OAAOF,MAAM,EAACtB,SAAA,EAE1EF,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,QAAOtB,SAAC,WACtBF,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,SAAQtB,SAAC,YACvBF,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,eAActB,SAAC,kBAC7BF,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,UAAStB,SAAC,aACxBF,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,YAAWtB,SAAC,eAC1BF,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,YAAWtB,SAAC,eAC1BF,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,SAAQtB,SAAC,kBAG3BS,EAAAA,EAAAA,MAAA,OAAKR,UAAU,aAAYD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,SAAOoB,QAAQ,SAAQlB,SAAC,YACxBS,EAAAA,EAAAA,MAAA,UACER,UAAU,eAEVyB,UAAQ,EACRjK,GAAG,SACH4J,KAAK,SACLC,MAAOjG,GACPkG,SAAU,SAACZ,GAAC,OAAKrF,GAAUqF,EAAEa,OAAOF,MAAM,EAACtB,SAAA,EAE3CF,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,UAAStB,SAAC,aACxBF,EAAAA,EAAAA,KAAA,UAAQwB,MAAM,YAAWtB,SAAC,qBAI9BS,EAAAA,EAAAA,MAAA,OAAKR,UAAU,WAAUD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,SAAOoB,QAAQ,aAAYlB,SAAC,iBAC5BF,EAAAA,EAAAA,KAAA,SACEsB,KAAK,OACLnB,UAAU,wBACVsB,SA/Ld,SAAwBZ,GACtB7B,QAAQC,IAAI4B,GACZ,IAAIgB,EAAS,IAAIC,WACjBD,EAAOE,cAAclB,EAAEa,OAAOM,MAAM,IACpCH,EAAOI,OAAS,WACdjD,QAAQC,IAAI4C,EAAOZ,QACnB9D,GAAS0E,EAAOZ,OAClB,EACAY,EAAOK,QAAU,SAACf,GAChBnC,QAAQC,IAAIkC,EACd,CACF,QAuLUnB,EAAAA,EAAAA,KAAA,UAAQG,UAAU,uBAAuBC,MAAO,CAAE+B,OAAQ,QAAUb,KAAK,SAAQpB,SAAC,iBAQ9F,C","sources":["views/PM/EditPM.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n// import editForm from './css/editform.css';\r\n// import { Form, FormGroup, Label, Input, Button, Container, Col } from 'reactstrap';\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport default function EditForm() {\r\n  const { id } = useParams()\r\n  const navigate = useNavigate()\r\n  const [AssetName, setAssetName] = useState('')\r\n  const [TaskName, setTaskName] = useState('')\r\n  const [TaskDescription, setTaskDescription] = useState('')\r\n  const [AssetCategory, setAssetCategory] = useState('') // Default to false\r\n  const [Location, setLocation] = useState('') // Default to false\r\n  const [ManufacturersName, setManufacturersName] = useState('')\r\n  const [ManufacturersAddress, setManufacturersAddress] = useState('')\r\n  const [ManufacturersContactNo, setManufacturersContactNo] = useState('')\r\n  const [SupplierVendorInformation, setSupplierVendorInformation] = useState('')\r\n  const [CurrentOwner, setCurrentOwner] = useState('')\r\n  const [DepartmentResponsible, setDepartmentResponsible] = useState('')\r\n  const [LocationDepartment, setLocationDepartment] = useState('')\r\n  const [PhysicalLocation, setPhysicalLocation] = useState('')\r\n  const [CurrentStatus, setCurrentStatus] = useState('')\r\n  const [ExpectedUsefulLife, setExpectedUsefulLife] = useState('')\r\n  const [DateofLastMaintenance, setDateofLastMaintenance] = useState('')\r\n  const [DetailsofMaintenanceActivities, setDetailsofMaintenanceActivities] = useState('')\r\n  const [ScheduledMaintenanceDatesandIntervals, setScheduledMaintenanceDatesandIntervals] =\r\n    useState('')\r\n  const [ManufacturersEmail, setManufacturersEmail] = useState('')\r\n  const [status, setstatus] = useState('')\r\n  const [ModelNumber, setModelNumber] = useState('')\r\n  const [SerialNumber, setSerialNumber] = useState('')\r\n  const [PurchaseCost, setPurchaseCost] = useState('')\r\n  const [PurchaseDate, setPurchaseDate] = useState('')\r\n  const [WarrantyStartDate, setWarrantyStartDate] = useState('')\r\n  const [WarrantyEndDate, seWarrantyEndDate] = useState('')\r\n  const [AcquisitionMethod, setAcquisitionMethod] = useState('')\r\n  const [WarrantyProviderManufacturerContact, setWarrantyProviderManufacturerContact] = useState('')\r\n  const [WarrantyTermsandConditions, setWarrantyTermsandConditions] = useState('')\r\n  const [PMDetails, setPMDetails] = useState('')\r\n  const [Image, setImage] = useState('')\r\n  const [startDate, setstartDate] = useState('')\r\n  const [nextDate, setnextDate] = useState('')\r\n  const [successMessage, setSuccessMessage] = useState('')\r\n  const [file, setFile] = useState(null)\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0])\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  function convertToBse64(e) {\r\n    console.log(e)\r\n    let reader = new FileReader()\r\n    reader.readAsDataURL(e.target.files[0])\r\n    reader.onload = () => {\r\n      console.log(reader.result) // base64encoded string\r\n      setImage(reader.result)\r\n    }\r\n    reader.onerror = (err) => {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`https://backendmaintenx.onrender.com/api/pm/${id}`)\r\n      console.log(response)\r\n      setAssetName(response.data.AssetName)\r\n      setTaskName(response.data.TaskName)\r\n      setTaskDescription(response.data.TaskDescription)\r\n      setAssetCategory(response.data.AssetCategory)\r\n      setLocation(response.data.Location)\r\n      setCurrentStatus(response.data.CurrentStatus)\r\n      setPMDetails(response.data.PMDetails)\r\n      setImage(response.data.Image)\r\n      setstartDate(formatDate(response.data.startDate))\r\n      setnextDate(formatDate(response.data.nextDate))\r\n      setstatus(response.data.status)\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error)\r\n    }\r\n  }\r\n\r\n  const Update = (e) => {\r\n    e.preventDefault()\r\n    axios\r\n      .put(`https://backendmaintenx.onrender.com/api/pm/${id}`, {\r\n        AssetName,\r\n        TaskName,\r\n        TaskDescription,\r\n        AssetCategory,\r\n        Location,\r\n        ModelNumber,\r\n        DetailsofMaintenanceActivities,\r\n        ScheduledMaintenanceDatesandIntervals,\r\n        PMDetails,\r\n        status,\r\n        Image,\r\n        startDate,\r\n        nextDate,\r\n      })\r\n      .then((result) => {\r\n        console.log(result)\r\n        setAssetName('')\r\n        setTaskName('')\r\n        setTaskDescription('')\r\n        setAssetCategory('')\r\n        setLocation('')\r\n        setstartDate('')\r\n        setScheduledMaintenanceDatesandIntervals('')\r\n        setnextDate('')\r\n        setstatus('')\r\n        setImage('')\r\n        setnextDate('')\r\n\r\n        // Assuming you have a navigate function or useHistory from react-router-dom\r\n        // Navigate back to the previous page\r\n        navigate(-1)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n  // Create a function to format the date\r\n  const formatDate = (dateString) => {\r\n    const parsedDate = new Date(dateString)\r\n    return parsedDate.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"tab-content1\"\r\n        style={{\r\n          border: '2px solid #ccc',\r\n          backgroundColor: '',\r\n          padding: '20px',\r\n          borderRadius: '10px',\r\n          boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {/* Step 1: Asset Identification */}\r\n        <div>\r\n          <form onSubmit={Update}>\r\n            <div className=\"form-group\"></div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"taskName\">Task Name:</label>\r\n              <input\r\n                disabled\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"taskName\"\r\n                id=\"taskName\"\r\n                // style={{ width: '100%' }}\r\n                value={TaskName}\r\n                onChange={(e) => setTaskName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"assetDescription\">Description:</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                disabled\r\n                // style={{ width: '80%' }}\r\n                id=\"taskDescription\"\r\n                defaultValue={''}\r\n                name=\"TaskDescription\"\r\n                value={TaskDescription}\r\n                onChange={(e) => setTaskDescription(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"startDate\">Start From :</label>\r\n              <input\r\n                type=\"text\" // Change input type to text\r\n                className=\"form-control\"\r\n                id=\"startDate\"\r\n                // style={{ width: '80%' }}\r\n                name=\"startDate\"\r\n                value={startDate}\r\n                disabled // to make it non-editable\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"startDate\">Next Date :</label>\r\n              <input\r\n                type=\"text\" // Change input type to text\r\n                className=\"form-control\"\r\n                id=\"nextDate\"\r\n                // style={{ width: '80%' }}\r\n                name=\"nextDate\"\r\n                value={nextDate}\r\n                onChange={(e) => setnextDate(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"scheduledMaintenance\">\r\n                Scheduled Maintenance Dates and Intervals:\r\n              </label>\r\n              <select\r\n                disabled\r\n                className=\"form-control\"\r\n                // style={{ width: '80%' }}\r\n                id=\"scheduledMaintenance\"\r\n                name=\"ScheduledMaintenanceDatesandIntervals\"\r\n                value={ScheduledMaintenanceDatesandIntervals}\r\n                onChange={(e) => setScheduledMaintenanceDatesandIntervals(e.target.value)}\r\n              >\r\n                <option value=\"daily\">Daily</option>\r\n                <option value=\"weekly\">Weekly</option>\r\n                <option value=\"fifteen days\">Fifteen Days</option>\r\n                <option value=\"monthly\">Monthly</option>\r\n                <option value=\"quarterly\">Quarterly</option>\r\n                <option value=\"half year\">Half Year</option>\r\n                <option value=\"yearly\">Yearly</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"status\">Status</label>\r\n              <select\r\n                className=\"form-control\"\r\n                // style={{ width: '80%' }}\r\n                required\r\n                id=\"status\"\r\n                name=\"status\"\r\n                value={status}\r\n                onChange={(e) => setstatus(e.target.value)}\r\n              >\r\n                <option value=\"Pending\">Pending</option>\r\n                <option value=\"Completed\">Completed</option>\r\n                {/* <option value=\"open\">Open</option> */}\r\n              </select>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"attachment\">Attachment:</label>\r\n              <input\r\n                type=\"file\"\r\n                className=\"form-control col-sm-6\"\r\n                onChange={convertToBse64}\r\n              ></input>\r\n            </div>\r\n            <button className=\"btn btn-primary mb-2\" style={{ margin: '10px' }} type=\"submit\">\r\n              Save\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n"],"names":["EditForm","id","useParams","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","AssetName","setAssetName","_useState3","_useState4","TaskName","setTaskName","_useState5","_useState6","TaskDescription","setTaskDescription","_useState7","_useState8","AssetCategory","setAssetCategory","_useState9","_useState10","Location","setLocation","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","setCurrentStatus","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","DetailsofMaintenanceActivities","_useState35","_useState36","ScheduledMaintenanceDatesandIntervals","setScheduledMaintenanceDatesandIntervals","_useState37","_useState38","_useState39","_useState40","status","setstatus","_useState41","_useState42","ModelNumber","_useState43","_useState44","_useState45","_useState46","_useState47","_useState48","_useState49","_useState50","_useState51","_useState52","_useState53","_useState54","_useState55","_useState56","_useState57","_useState58","_useState59","_useState60","PMDetails","setPMDetails","_useState61","_useState62","Image","setImage","_useState63","_useState64","startDate","setstartDate","_useState65","_useState66","nextDate","setnextDate","_useState67","_useState68","_useState69","_useState70","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","console","log","data","CurrentStatus","formatDate","t0","error","stop","apply","arguments","dateString","Date","toLocaleDateString","year","month","day","_jsx","_Fragment","children","className","style","border","backgroundColor","padding","borderRadius","boxShadow","width","_jsxs","onSubmit","e","preventDefault","put","then","result","catch","err","htmlFor","disabled","type","name","value","onChange","target","defaultValue","required","reader","FileReader","readAsDataURL","files","onload","onerror","margin"],"sourceRoot":""}