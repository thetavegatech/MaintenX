{"version":3,"file":"static/js/860.b97e5542.chunk.js","mappings":"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","sources":["views/TBMForm.js","../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/addWeeks/index.js","../node_modules/date-fns/esm/toDate/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { addDays, addWeeks, addMonths } from 'date-fns'\r\nimport './form.css'\r\n\r\nconst TBMForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    assetName: '',\r\n    location: '',\r\n    assetType: '',\r\n    installationDate: '',\r\n    tbmScheduleDate: '',\r\n    tbmFrequency: '',\r\n    nextTbmDate: '',\r\n    status: 'Pending',\r\n  })\r\n\r\n  const [message, setMessage] = useState('')\r\n  const [assets, setAssets] = useState([])\r\n\r\n  const calculateNextCbmDate = (scheduleDate, frequency) => {\r\n    if (!scheduleDate || !frequency) return ''\r\n\r\n    const date = new Date(scheduleDate)\r\n    switch (frequency) {\r\n      case 'daily':\r\n        return addDays(date, 1).toISOString().split('T')[0]\r\n      case 'weekly':\r\n        return addWeeks(date, 1).toISOString().split('T')[0]\r\n      case 'fifteen days':\r\n        return addDays(date, 15).toISOString().split('T')[0]\r\n      case 'monthly':\r\n        return addMonths(date, 1).toISOString().split('T')[0]\r\n      case 'quarterly':\r\n        return addMonths(date, 3).toISOString().split('T')[0]\r\n      case 'half year':\r\n        return addMonths(date, 6).toISOString().split('T')[0]\r\n      case 'yearly':\r\n        return addMonths(date, 12).toISOString().split('T')[0]\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Fetch asset names from the API\r\n    const fetchAssets = async () => {\r\n      try {\r\n        const response = await axios.get('https://backendmaintenx.onrender.com/api/assets')\r\n        setAssets(response.data)\r\n      } catch (error) {\r\n        console.error('Error fetching assets:', error)\r\n      }\r\n    }\r\n\r\n    fetchAssets()\r\n  }, [])\r\n\r\n  const handleChange = async (e) => {\r\n    const { name, value } = e.target\r\n    let updatedFormData = {\r\n      ...formData,\r\n      [name]: value,\r\n    }\r\n\r\n    if (name === 'assetName') {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://backendmaintenx.onrender.com/api/locations/${value}`,\r\n        )\r\n        if (response.data && response.data.Location) {\r\n          updatedFormData = {\r\n            ...updatedFormData,\r\n            location: response.data.Location,\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching location:', error)\r\n      }\r\n    }\r\n\r\n    if (name === 'tbmScheduleDate' || name === 'tbmFrequency') {\r\n      const { tbmScheduleDate, tbmFrequency } = updatedFormData\r\n      const nextTbmDate = calculateNextCbmDate(tbmScheduleDate, tbmFrequency)\r\n      updatedFormData = {\r\n        ...updatedFormData,\r\n        nextTbmDate,\r\n      }\r\n    }\r\n\r\n    setFormData(updatedFormData)\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      await axios.post('https://backendmaintenx.onrender.com/api/tbm', formData)\r\n      setMessage('TBM record created successfully!')\r\n      // Reset form data after successful submission\r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        assetName: '',\r\n        location: '',\r\n        assetType: '',\r\n        installationDate: '',\r\n        tbmScheduleDate: '',\r\n        tbmFrequency: '',\r\n        nextTbmDate: '',\r\n        status: 'Pending',\r\n      }))\r\n    } catch (error) {\r\n      setMessage('Error creating TBM record.')\r\n      console.error('There was an error creating the TBM record:', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h4>Create TBM Record</h4>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label>Asset Name:</label>\r\n            <select\r\n              name=\"assetName\"\r\n              className=\"form-control\"\r\n              value={formData.assetName}\r\n              onChange={handleChange}\r\n              required\r\n            >\r\n              <option value=\"\">Select Asset</option>\r\n              {assets.map((asset) => (\r\n                <option key={asset._id} value={asset.name}>\r\n                  {asset.AssetName}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Location:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              className=\"form-control\"\r\n              value={formData.location}\r\n              readOnly\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>CBM Schedule Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"tbmScheduleDate\"\r\n              className=\"form-control\"\r\n              value={formData.tbmScheduleDate}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>CBM Frequency:</label>\r\n            <select\r\n              type=\"text\"\r\n              name=\"tbmFrequency\"\r\n              className=\"form-control\"\r\n              value={formData.tbmFrequency}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"daily\">Daily</option>\r\n              <option value=\"weekly\">Weekly</option>\r\n              <option value=\"fifteen days\">Fifteen Days</option>\r\n              <option value=\"monthly\">Monthly</option>\r\n              <option value=\"quarterly\">Quarterly</option>\r\n              <option value=\"half year\">Half Year</option>\r\n              <option value=\"yearly\">Yearly</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Next TBM Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"nextTbmDate\"\r\n              className=\"form-control\"\r\n              value={formData.nextTbmDate}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-button\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TBMForm\r\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  var dayOfMonth = date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}"],"names":["_useState","useState","assetName","location","assetType","installationDate","tbmScheduleDate","tbmFrequency","nextTbmDate","status","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","message","setMessage","_useState5","_useState6","assets","setAssets","calculateNextCbmDate","scheduleDate","frequency","date","Date","addDays","toISOString","split","addWeeks","addMonths","useEffect","fetchAssets","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","t0","console","error","stop","apply","arguments","handleChange","_ref2","_callee2","e","_e$target","name","value","updatedFormData","_updatedFormData","_context2","target","_objectSpread","_defineProperty","concat","Location","_x","handleSubmit","_ref3","_callee3","_context3","preventDefault","post","prevState","_x2","_jsxs","className","children","_jsx","onSubmit","onChange","required","map","asset","AssetName","_id","type","readOnly","requiredArgs","args","length","TypeError","toInteger","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","dirtyDate","dirtyAmount","toDate","amount","setDate","getDate","dayOfMonth","endOfDesiredMonth","getTime","setMonth","getMonth","setFullYear","getFullYear","days","argument","argStr","Object","prototype","toString","call","_typeof","warn","Error","stack"],"sourceRoot":""}