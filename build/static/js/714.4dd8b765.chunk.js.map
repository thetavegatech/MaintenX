{"version":3,"file":"static/js/714.4dd8b765.chunk.js","mappings":"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","sources":["views/CBMEdit.js","../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/addWeeks/index.js","../node_modules/date-fns/esm/toDate/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { addDays, addWeeks, addMonths } from 'date-fns'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\n\r\nconst CBMEdit = () => {\r\n  const [formData, setFormData] = useState({\r\n    assetName: '',\r\n    location: '',\r\n    assetType: '',\r\n    installationDate: '',\r\n    cbmScheduleDate: '',\r\n    cbmFrequency: '',\r\n    nextCbmDate: '',\r\n    status: '',\r\n  })\r\n\r\n  const { id } = useParams()\r\n  const navigate = useNavigate()\r\n  const [message, setMessage] = useState('')\r\n\r\n  useEffect(() => {\r\n    // Fetch data by id when the component mounts\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(`https://backendmaintenx.onrender.com/api/cbm/${id}`)\r\n        const data = response.data\r\n\r\n        setFormData({\r\n          assetName: data.assetName,\r\n          location: data.location,\r\n          assetType: data.assetType,\r\n          installationDate: data.installationDate,\r\n          cbmScheduleDate: data.cbmScheduleDate ? data.cbmScheduleDate.split('T')[0] : '',\r\n          cbmFrequency: data.cbmFrequency,\r\n          nextCbmDate: data.nextCbmDate ? data.nextCbmDate.split('T')[0] : '',\r\n          status: data.status,\r\n        })\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error)\r\n        setMessage('Error fetching data. Please try again.')\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [id])\r\n\r\n  const calculateNextCbmDate = (scheduleDate, frequency) => {\r\n    if (!scheduleDate || !frequency) return ''\r\n\r\n    const date = new Date(scheduleDate)\r\n    switch (frequency) {\r\n      case 'daily':\r\n        return addDays(date, 1).toISOString().split('T')[0]\r\n      case 'weekly':\r\n        return addWeeks(date, 1).toISOString().split('T')[0]\r\n      case 'fifteen days':\r\n        return addDays(date, 15).toISOString().split('T')[0]\r\n      case 'monthly':\r\n        return addMonths(date, 1).toISOString().split('T')[0]\r\n      case 'quarterly':\r\n        return addMonths(date, 3).toISOString().split('T')[0]\r\n      case 'half year':\r\n        return addMonths(date, 6).toISOString().split('T')[0]\r\n      case 'yearly':\r\n        return addMonths(date, 12).toISOString().split('T')[0]\r\n      default:\r\n        return ''\r\n    }\r\n  }\r\n\r\n  const handleChange = async (e) => {\r\n    const { name, value } = e.target\r\n    let updatedFormData = {\r\n      ...formData,\r\n      [name]: value,\r\n    }\r\n\r\n    if (name === 'assetName') {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://backendmaintenx.onrender.com/api/locations/${value}`,\r\n        )\r\n        if (response.data && response.data.Location) {\r\n          updatedFormData = {\r\n            ...updatedFormData,\r\n            location: response.data.Location,\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching location:', error)\r\n      }\r\n    }\r\n\r\n    if (name === 'cbmScheduleDate' || name === 'cbmFrequency') {\r\n      const { cbmScheduleDate, cbmFrequency } = updatedFormData\r\n      const nextCbmDate = calculateNextCbmDate(cbmScheduleDate, cbmFrequency)\r\n      updatedFormData = {\r\n        ...updatedFormData,\r\n        nextCbmDate,\r\n      }\r\n    }\r\n\r\n    setFormData(updatedFormData)\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      await axios.put(`https://backendmaintenx.onrender.com/api/cbm/${id}`, formData)\r\n      navigate(-1) // Navigate back to the previous page\r\n    } catch (error) {\r\n      console.error('Error updating CBM record:', error)\r\n      setMessage('Error updating CBM record. Please try again.')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{\r\n        border: '1px solid #ccc',\r\n        padding: '5px',\r\n        backgroundColor: '',\r\n        borderRadius: '10px',\r\n        boxShadow: '2px 4px 4px rgba(0, 0, 0, 0.1)',\r\n        height: '50%',\r\n        width: '100%',\r\n      }}\r\n    >\r\n      <h4>Edit CBM Record</h4>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"row g-3\">\r\n          <div className=\"col-md-4\">\r\n            <label>Asset Name:</label>\r\n            <input\r\n              name=\"assetName\"\r\n              className=\"form-control col-sm-6\"\r\n              value={formData.assetName}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <label>Location:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              className=\"form-control col-sm-4\"\r\n              value={formData.location}\r\n              onChange={handleChange}\r\n              readOnly\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <label>CBM Schedule Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"cbmScheduleDate\"\r\n              className=\"form-control col-sm-6\"\r\n              value={formData.cbmScheduleDate}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <label>CBM Frequency:</label>\r\n            <select\r\n              type=\"text\"\r\n              name=\"cbmFrequency\"\r\n              className=\"form-control col-sm-6\"\r\n              value={formData.cbmFrequency}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"daily\">Daily</option>\r\n              <option value=\"weekly\">Weekly</option>\r\n              <option value=\"fifteen days\">Fifteen Days</option>\r\n              <option value=\"monthly\">Monthly</option>\r\n              <option value=\"quarterly\">Quarterly</option>\r\n              <option value=\"half year\">Half Year</option>\r\n              <option value=\"yearly\">Yearly</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <label>Next CBM Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"nextCbmDate\"\r\n              className=\"form-control col-sm-6\"\r\n              value={formData.nextCbmDate}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <label htmlFor=\"status\">Status</label>\r\n            <select\r\n              className=\"form-control col-sm-6\"\r\n              required\r\n              id=\"status\"\r\n              name=\"status\"\r\n              value={formData.status}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"Pending\">Pending</option>\r\n              <option value=\"Completed\">Completed</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CBMEdit\r\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  var dayOfMonth = date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}"],"names":["_useState","useState","assetName","location","assetType","installationDate","cbmScheduleDate","cbmFrequency","nextCbmDate","status","_useState2","_slicedToArray","formData","setFormData","id","useParams","navigate","useNavigate","_useState3","_useState4","message","setMessage","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","axios","get","concat","sent","split","t0","console","error","stop","apply","arguments","calculateNextCbmDate","scheduleDate","frequency","date","Date","addDays","toISOString","addWeeks","addMonths","handleChange","_ref2","_callee2","e","_e$target","name","value","updatedFormData","_updatedFormData","_context2","target","_objectSpread","_defineProperty","Location","_x","handleSubmit","_ref3","_callee3","_context3","preventDefault","put","_x2","_jsxs","className","style","border","padding","backgroundColor","borderRadius","boxShadow","height","width","children","_jsx","onSubmit","onChange","required","type","readOnly","htmlFor","requiredArgs","args","length","TypeError","toInteger","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","dirtyDate","dirtyAmount","toDate","amount","setDate","getDate","dayOfMonth","endOfDesiredMonth","getTime","setMonth","getMonth","setFullYear","getFullYear","days","argument","argStr","Object","prototype","toString","call","_typeof","warn","Error","stack"],"sourceRoot":""}