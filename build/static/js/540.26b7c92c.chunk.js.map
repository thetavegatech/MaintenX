{"version":3,"file":"static/js/540.26b7c92c.chunk.js","mappings":"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","sources":["views/widgets/WidgetsDropdown.js","views/dashboard/Dashboard.js","views/production/ProductionBD.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { useNavigate } from 'react-router-dom'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilOptions,\n  cilGraph,\n  cilBasket,\n  cilClock,\n  cilPending,\n  cilStorage,\n  cilUser,\n  cilTask,\n  cilCheckCircle,\n} from '@coreui/icons'\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LineChart,\n  Line,\n} from 'recharts'\nimport { Date } from 'core-js'\nimport './WidgetsDropdown.css'\n\nconst WidgetsDropdown = () => {\n  const navigate = useNavigate()\n  const [breakdownType, setbreakdownType] = useState([])\n  const [formattedChartData, setFormattedChartData] = useState([])\n  const [assets, setAssets] = useState([])\n  const [totalTasks, setTotalTasks] = useState(0)\n  const [breakdowns, setBreakdown] = useState([])\n  const [totalBreakdown, setTotalBreakdown] = useState(0)\n  const [pendingTaskCount, setPendingTaskCount] = useState(0)\n  const [completdTasksCount, setcompletdTasksCount] = useState(0)\n  const [todaysTaskCount, setTodaysTaskCount] = useState(0)\n  const [completedTasksCount, setCompletedTasksCount] = useState(0)\n  const today = new Date()\n  const formattedToday = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(\n    2,\n    '0',\n  )}-${String(today.getDate()).padStart(2, '0')}`\n  const todaysScheduledAssets = assets.filter((asset) => asset.nextDate === formattedToday)\n  const todaysScheduledAssetsok = assets.filter(\n    (asset) => asset.nextDate === formattedToday && asset.status === 'Completed',\n  )\n  const todaysScheduledAssetsnok = assets.filter(\n    (asset) => asset.nextDate === formattedToday && asset.status === 'pending',\n  )\n\n  const aggregateData = (data) => {\n    return data.reduce((acc, curr) => {\n      if (!acc[curr.BreakdownType]) {\n        acc[curr.BreakdownType] = 1\n      } else {\n        acc[curr.BreakdownType]++\n      }\n      return acc\n    }, {})\n  }\n\n  const convertToChartData = (aggregatedData) => {\n    return Object.entries(aggregatedData).map(([key, value]) => ({\n      breakdownType: key,\n      value: value,\n    }))\n  }\n\n  useEffect(() => {\n    fetch('https://backendmaintenx.onrender.com/api/breakdown')\n      .then((response) => response.json())\n      .then((fetchedBreakdowns) => {\n        const aggregated = aggregateData(fetchedBreakdowns)\n        const chartData = convertToChartData(aggregated)\n        setFormattedChartData(chartData)\n      })\n      .catch((error) => console.error('Error fetching breakdowns: ', error))\n  }, [])\n\n  useEffect(() => {\n    const breakdownType = []\n    const getbreakdownRecord = async () => {\n      const dataReq = await fetch('https://backendmaintenx.onrender.com/api/breakdown')\n      const dataRes = await dataReq.json()\n      console.log(dataRes)\n\n      for (let i = 0; i < dataReq.length; i++) {\n        breakdownType.push(dataRes[i].BreakdownType)\n      }\n\n      setbreakdownType(breakdownType)\n    }\n    getbreakdownRecord()\n  }, [])\n\n  useEffect(() => {\n    fetch('https://backendmaintenx.onrender.com/api/breakdown')\n      .then((response) => response.json())\n      .then((fetchedBreakdowns) => {\n        setBreakdown(fetchedBreakdowns, breakdowns)\n        setTotalBreakdown(fetchedBreakdowns.length) // Compute total number of tasks\n      })\n      .catch((error) => console.error('Error fetching tasks: ', error))\n  }, [])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://backendmaintenx.onrender.com/api/pm')\n        const fetchedTasks = await response.json()\n\n        setAssets(fetchedTasks)\n        setTotalTasks(fetchedTasks.length)\n\n        const pendingTasks = fetchedTasks.filter((asset) => asset.status === 'Pending')\n        setPendingTaskCount(pendingTasks.length)\n\n        const completedTasks = fetchedTasks.filter((asset) => asset.status === 'Completed')\n        setCompletedTasksCount(completedTasks.length)\n\n        const currentDate = new Date()\n        const lastDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0)\n        const isEndOfMonth = currentDate.getDate() === lastDayOfMonth.getDate()\n\n        if (isEndOfMonth && pendingTasks.length > 0) {\n          const formData = {}\n          sendSMS(formData, numbers)\n        }\n      } catch (error) {\n        console.error('Error fetching tasks: ', error)\n      }\n    }\n\n    fetchData()\n  }, [])\n\n  const [formData, setFormData] = useState({\n    MachineName: '',\n    BreakdownStartDate: '',\n    BreakdownEndDate: '',\n    BreakdownStartTime: '',\n    BreakdownEndTime: '',\n    Shift: '',\n    LineName: '',\n    Operations: '',\n    BreakdownPhenomenons: '',\n    BreakdownType: '',\n    OCC: '',\n    BreakdownTime: '',\n    ActionTaken: '',\n    WhyWhyAnalysis: '',\n    RootCause: '',\n    PermanentAction: '',\n    TargetDate: '',\n    Responsibility: '',\n    HD: '',\n    Remark: '',\n    Status: 'open',\n  })\n\n  const apiKey = 'NDE1MDY2NGM2Mzc3NTI0ZjQzNmE1YTM5NDY0YzZlNzU='\n  const numbers = '7020804148' // Replace with the phone numbers\n  const sender = 'AAABRD'\n\n  const sendSMS = (formData, selectedUsers) => {\n    const { MachineName, BreakdownStartDate, Shift, LineName, Operations, BreakdownPhenomenons } =\n      formData\n    // Formulate a simple message\n    // const message = encodeURIComponent(\n    //   'Breakdown For ' +\n    //     pendingTaskCount +\n    //     ' please visit concerned department Details are ' +\n    //     pendingTaskCount +\n    //     ' - Aurangabad Auto Ancillary',\n    // )\n    const message = encodeURIComponent(\n      `Breakdown For ${pendingTaskCount} pending tasks. please visit concerned department Details are ${pendingTaskCount} - Aurangabad Auto Ancillary`,\n    )\n\n    // Create the API URL\n    const url = `https://api.textlocal.in/send/?apikey=${apiKey}&sender=${sender}&numbers=${numbers}&message=${message}`\n\n    // Use fetch to send the SMS\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log('SMS sent successfully:', data)\n        console.log(numbers, message)\n      })\n      .catch((error) => {\n        console.error('Error sending SMS:', error)\n        // console.log(selected)\n      })\n  }\n\n  const handleButtonClick = () => {\n    // Call the SMS sending function\n    sendSMS(formData, numbers)\n  }\n\n  useEffect(() => {\n    fetch(`https://backendmaintenx.onrender.com/api/pm?nextDate=${formattedToday}`)\n      .then((response) => response.json())\n      .then((fetchedTasks) => {\n        setTodaysTaskCount(fetchedTasks.length)\n      })\n      .catch((error) => console.error(\"Error fetching today's tasks: \", error))\n    console.log(todaysTaskCount, todaysScheduledAssets, todaysScheduledAssetsnok.length)\n  }, [])\n\n  useEffect(() => {\n    fetch('https://backendmaintenx.onrender.com/api/assets')\n      .then((response) => response.json())\n      .then((fetchedTasks) => {\n        setAssets(fetchedTasks)\n        setTotalTasks(fetchedTasks.length)\n      })\n  }, [])\n\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <div className=\"custom-widget primary custom-card\">\n          <div className=\"icon\">\n            <CIcon icon={cilGraph} size=\"3xl\" />\n          </div>\n          <div className=\"details\">\n            <div className=\"stat-number\">{totalBreakdown}</div>\n            <div className=\"stat-label\">Total Breakdown</div>\n          </div>\n          <CDropdown alignment=\"end\" className=\"options\">\n            <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n              <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n            </CDropdownToggle>\n            <CDropdownMenu>\n              <NavLink to=\"/production\" className=\"nav-link\">\n                <CDropdownItem>View More</CDropdownItem>\n              </NavLink>\n            </CDropdownMenu>\n          </CDropdown>\n        </div>\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <div className=\"custom-widget info custom-card\">\n          <div className=\"icon\">\n            <CIcon icon={cilStorage} size=\"3xl\" />\n          </div>\n          <div className=\"details\">\n            <div className=\"stat-number\">{totalTasks}</div>\n            <div className=\"stat-label\">All Assets</div>\n          </div>\n          <CDropdown alignment=\"end\" className=\"options\">\n            <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n              <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n            </CDropdownToggle>\n            <CDropdownMenu>\n              <NavLink to=\"/assetTable\" className=\"nav-link\">\n                <CDropdownItem>View More</CDropdownItem>\n              </NavLink>\n            </CDropdownMenu>\n          </CDropdown>\n        </div>\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <div className=\"custom-widget warning custom-card\">\n          <div className=\"icon\">\n            <CIcon icon={cilTask} size=\"3xl\" />\n          </div>\n          <div className=\"details\">\n            <div className=\"stat-number\">{todaysTaskCount}</div>\n            <div className=\"stat-label\">Pending Tasks</div>\n          </div>\n          <CDropdown alignment=\"end\" className=\"options\">\n            <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n              <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n            </CDropdownToggle>\n            <CDropdownMenu>\n              <NavLink to=\"/pmSchedule\" className=\"nav-link\">\n                <CDropdownItem>View More</CDropdownItem>\n              </NavLink>\n            </CDropdownMenu>\n          </CDropdown>\n        </div>\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <div className=\"custom-widget danger custom-card\">\n          <div className=\"icon\">\n            <CIcon icon={cilCheckCircle} size=\"3xl\" />\n          </div>\n          <div className=\"details\">\n            <div className=\"stat-number\">{completedTasksCount}</div>\n            <div className=\"stat-label\">Completed Tasks</div>\n          </div>\n          <CDropdown alignment=\"end\" className=\"options\">\n            <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n              <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n            </CDropdownToggle>\n            <CDropdownMenu>\n              <NavLink to=\"/pmSchedule\" className=\"nav-link\">\n                <CDropdownItem>View More</CDropdownItem>\n              </NavLink>\n            </CDropdownMenu>\n          </CDropdown>\n        </div>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","import React, { useState, useEffect } from 'react'\n// import { CCard, CCardBody, CCol, CCardHeader, CRow } from '@coreui/react'\nimport {\n  CChartBar,\n  CChartDoughnut,\n  CChartLine,\n  CChartPie,\n  CChartPolarArea,\n  CChartRadar,\n} from '@coreui/react-chartjs'\nimport { DocsCallout } from 'src/components'\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\n// import { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  LineChart,\n  Line,\n} from 'recharts'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport BreakDown from './../production/ProductionBD'\nimport axios from 'axios'\nimport { useLocation } from 'react-router-dom'\n\nconst Dashboard = () => {\n  const location = useLocation()\n  const { username, userRoll } = location.state || {}\n  const [user, setUser] = useState({ username: '', userRoll: '' })\n  const [breakdownType, setbreakdownType] = useState([])\n\n  const [formattedChartData, setFormattedChartData] = useState([])\n\n  const [lineChartData, setLineChartData] = useState([])\n  const [lineChartLabels, setLineChartLabels] = useState([])\n\n  const [assets, setAssets] = useState([])\n  const [totalTasks, setTotalTasks] = useState(0)\n\n  const [breakdowns, setBreakdown] = useState([])\n  const [totalBreakdown, setTotalBreakdown] = useState(0)\n\n  const [todaysTaskCount, setTodaysTaskCount] = useState(0)\n  const today = new Date()\n  const formattedToday = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(\n    2,\n    '0',\n  )}-${String(today.getDate()).padStart(2, '0')}`\n  const todaysScheduledAssets = assets.filter((asset) => asset.nextDate === formattedToday)\n  const todaysScheduledAssetsok = assets.filter(\n    (asset) => asset.nextDate === formattedToday && asset.status === 'Completed',\n  )\n  const todaysScheduledAssetsnok = assets.filter(\n    (asset) => asset.nextDate === formattedToday && asset.status === 'Pending',\n  )\n\n  const aggregateDataByLineName = (data) => {\n    return data.reduce((acc, curr) => {\n      if (!acc[curr.LineName]) {\n        acc[curr.LineName] = 1\n      } else {\n        acc[curr.LineName]++\n      }\n      return acc\n    }, {})\n  }\n\n  const convertToLineChartData = (aggregatedData) => {\n    return Object.entries(aggregatedData).map(([key, value]) => ({\n      lineName: key,\n      value: value,\n    }))\n  }\n\n  const convertToLineChartLabels = (aggregatedData) => {\n    return Object.keys(aggregatedData)\n  }\n\n  // useEffect(() => {\n  //   // Make an API request to fetch user information\n  //   axios\n  //     .get('https://mms-backend-n2zv.onrender.com/getAlluser') // Replace with your API endpoint\n  //     .then((response) => {\n  //       const userData = response.data\n  //       setUser({\n  //         username: userData.username,\n  //         userRoll: userData.userRoll,\n  //       })\n  //     })\n  //     .catch((error) => {\n  //       console.error('Error fetching user info:', error)\n  //     })\n  // }, [])\n\n  useEffect(() => {\n    fetch('https://backendmaintenx.onrender.com/api/breakdown')\n      .then((response) => response.json())\n      .then((fetchedBreakdowns) => {\n        const aggregatedByLineName = aggregateDataByLineName(fetchedBreakdowns)\n        const lineChartData = convertToLineChartData(aggregatedByLineName)\n        const lineChartLabels = convertToLineChartLabels(aggregatedByLineName)\n        setLineChartData(lineChartData)\n        setLineChartLabels(lineChartLabels)\n      })\n      .catch((error) => console.error('Error fetching breakdowns: ', error))\n  }, [])\n\n  const aggregateData = (data) => {\n    return data.reduce((acc, curr) => {\n      if (!acc[curr.BreakdownType]) {\n        acc[curr.BreakdownType] = 1\n      } else {\n        acc[curr.BreakdownType]++\n      }\n      return acc\n    }, {})\n  }\n\n  const convertToChartData = (aggregatedData) => {\n    return Object.entries(aggregatedData).map(([key, value]) => ({\n      breakdownType: key,\n      value: value,\n    }))\n  }\n\n  useEffect(() => {\n    fetch('https://backendmaintenx.onrender.com/api/breakdown')\n      .then((response) => response.json())\n      .then((fetchedBreakdowns) => {\n        const aggregated = aggregateData(fetchedBreakdowns)\n        const chartData = convertToChartData(aggregated)\n        setFormattedChartData(chartData)\n      })\n      .catch((error) => console.error('Error fetching breakdowns: ', error))\n  }, [])\n\n  useEffect(() => {\n    fetch('https://backendmaintenx.onrender.com/api/breakdown')\n      .then((response) => response.json())\n      .then((fetchedBreakdowns) => {\n        setBreakdown(fetchedBreakdowns, breakdowns)\n        setTotalBreakdown(fetchedBreakdowns.length) // Compute total number of tasks\n      })\n      .catch((error) => console.error('Error fetching tasks: ', error))\n  }, [])\n\n  useEffect(() => {\n    fetch('https://backendmaintenx.onrender.com/api/pm')\n      .then((response) => response.json())\n\n      .then((fetchedTasks) => {\n        setAssets(fetchedTasks)\n        setTotalTasks(fetchedTasks.length) // Compute total number of tasks\n      })\n      .catch((error) => console.error('Error fetching tasks: ', error))\n  }, [])\n\n  useEffect(() => {\n    fetch(`https://backendmaintenx.onrender.com/api/pm?nextDate=${formattedToday}`)\n      .then((response) => response.json())\n      .then((fetchedTasks) => {\n        setTodaysTaskCount(fetchedTasks.length)\n      })\n      .catch((error) => console.error(\"Error fetching today's tasks: \", error))\n    console.log(todaysTaskCount, todaysScheduledAssets)\n  }, [])\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n\n  return (\n    <>\n      <div style={{ marginLeft: '70%' }}></div>\n      <WidgetsDropdown />\n      <CCard className=\"mb-4\"></CCard>\n      {/* <CRow>\n        <CCol xs={12} lg={6}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>BreakDown Type Wise Chart</CCardHeader>\n            <CCardBody>\n              <BarChart\n                width={window.innerWidth >= 992 ? 500 : 300}\n                height={300}\n                data={formattedChartData}\n                margin={{\n                  // top: 5,\n                  right: 20,\n                  // left: 5,\n                }}\n              >\n                <XAxis dataKey=\"breakdownType\" />\n                <YAxis />\n                <Tooltip />\n                <Bar\n                  dataKey=\"value\"\n                  fill=\"#8884d8\"\n                  // name=\"My First dataset\" // Add the label here\n                  backgroundColor=\"rgba(255,255,255,.2)\" // Add the background color here\n                  borderColor=\"rgba(255,255,255,.55)\" // Add the border color here\n                />\n              </BarChart>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs={12} lg={6}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>LineName Wise Chart</CCardHeader>\n            <CCardBody>\n              <LineChart\n                width={window.innerWidth >= 992 ? 500 : 300}\n                height={300}\n                data={lineChartData}\n                margin={{\n                  // top: 5,\n                  right: 20,\n                  // left: 20,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"lineName\" />\n                <YAxis data={lineChartData} />\n                <Tooltip />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#82ca9d\" />\n              </LineChart>\n            </CCardBody>\n          </CCard>\n        </CCol>\n\n        <CCol xs={12} lg={6}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>BreakDown Doughnut Chart</CCardHeader>\n            <CCardBody>\n              <CChartDoughnut\n                data={{\n                  labels: formattedChartData.map((item) => item.breakdownType), // Assuming your API response has a 'label' field\n                  datasets: [\n                    {\n                      backgroundColor: ['#41B883', '#E46651', '#00D8FF', '#DD1B16'],\n                      data: formattedChartData.map((item) => item.value), // Assuming your API response has a 'value' field\n                    },\n                  ],\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs={12} lg={6}>\n          <CCard className=\"mb-4 p\">\n            <CCardHeader>Line wise Pie Chart</CCardHeader>\n            <CCardBody>\n              <CChartPie\n                data={{\n                  labels: lineChartData.map((item) => item.lineName), // Assuming your API response has a 'LineName' field\n                  datasets: [\n                    {\n                      data: lineChartData.map((item) => item.value), // Assuming your API response has a 'value' field\n                      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'], // Specify the colors\n                      hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'], // Specify the hover colors\n                    },\n                  ],\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow> */}\n    </>\n  )\n}\n\nexport default Dashboard\n","import React, { useEffect, useState } from 'react'\r\nimport CIcon from '@coreui/icons-react'\r\n// import './Breakdown.css'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { CButton } from '@coreui/react'\r\nimport { cilPlus } from '@coreui/icons'\r\n\r\nexport default function BreakDown() {\r\n  const { id } = useParams()\r\n  const navigate = useNavigate()\r\n  const [MachineName, setMachineName] = useState('')\r\n  const [BreakdownStartDate, setBreakdownStartDate] = useState('')\r\n  const [BreakdownEndDate, setBreakdownEndDate] = useState('')\r\n  const [BreakdownStartTime, setBreakdownStartTime] = useState('')\r\n  const [BreakdownEndTime, setBreakdownEndTime] = useState('')\r\n  const [Shift, setShift] = useState('') // Default to false\r\n  const [LineName, setLineName] = useState('') // Default to false\r\n  const [Operations, setOperations] = useState('')\r\n  const [BreakdownPhenomenons, setBreakdownPhenomenons] = useState('')\r\n  const [BreakdownType, setBreakdownType] = useState('')\r\n  const [DetectOCC, setOCC] = useState('')\r\n  // const [BreakdownTime, setBreakdownTime] = useState('')\r\n  const [ActionTaken, setActionTaken] = useState('')\r\n  // const [WhyWhyAnalysis, setWhyWhyAnalysis] = useState('')\r\n  const [RootCause, setRootCause] = useState('')\r\n  const [PreventiveAction, setPreventiveAction] = useState('')\r\n  const [CorrectiveAction, setCorrectiveAction] = useState('')\r\n  const [TargetDate, setTargetDate] = useState('')\r\n  const [Responsibility, setResponsibility] = useState('')\r\n  const [HD, setHD] = useState('')\r\n  const [Remark, setRemark] = useState('')\r\n  const [Status, setStatus] = useState('')\r\n  const [Location, setLocation] = useState('')\r\n  const [SpareParts, setSpareParts] = useState('')\r\n  const [Cost, setCost] = useState('')\r\n  const [WhyWhyAnalysis, setWhyWhyAnalysis] = useState('')\r\n  const [whyWhyAnalysisList, setWhyWhyAnalysisList] = useState([])\r\n  const [formData, setFormData] = useState({})\r\n  //   let status = 'pending'\r\n  const [successMessage, setSuccessMessage] = useState('')\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`https://backendmaintenx.onrender.com/api/breakdown/${id}`)\r\n      console.log(response)\r\n      setMachineName(response.data.MachineName)\r\n      setBreakdownStartDate(response.data.BreakdownStartDate)\r\n      setBreakdownStartTime(response.data.BreakdownStartTime)\r\n      setBreakdownEndDate(response.data.BreakdownEndDate)\r\n      setBreakdownEndTime(response.data.BreakdownEndTime)\r\n      setShift(response.data.Shift)\r\n      setLineName(response.data.LineName)\r\n      setOperations(response.data.Operations)\r\n      setBreakdownPhenomenons(response.data.BreakdownPhenomenons)\r\n      setStatus(response.data.Status)\r\n      setLocation(response.data.Location)\r\n      setSpareParts(response.data.SpareParts)\r\n      setCost(response.data.Cost)\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error)\r\n    }\r\n  }\r\n\r\n  const [Image, setImage] = useState('')\r\n  //   let status = 'pending'\r\n\r\n  function convertToBse64(e) {\r\n    console.log(e)\r\n    let reader = new FileReader()\r\n    reader.readAsDataURL(e.target.files[0])\r\n    reader.onload = () => {\r\n      console.log(reader.result) // base64encoded string\r\n      setImage(reader.result)\r\n    }\r\n    reader.onerror = (err) => {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const [dataArray, setDataArray] = useState([])\r\n\r\n  const handleInputChange = (e) => {\r\n    setWhyWhyAnalysis(e.target.value)\r\n  }\r\n\r\n  const handleButtonClick = () => {\r\n    setWhyWhyAnalysisList([...whyWhyAnalysisList, WhyWhyAnalysis])\r\n    setWhyWhyAnalysis('') // Clear the input field after adding to the array\r\n  }\r\n  // const handleButtonClick = () => {\r\n  //   if (WhyWhyAnalysis.trim() !== '') {\r\n  //     setWhyWhyAnalysisList([...whyWhyAnalysisList, WhyWhyAnalysis])\r\n  //     setWhyWhyAnalysis('') // Clear the input field after adding to the list\r\n  //   }\r\n  // }\r\n\r\n  const Update = (e) => {\r\n    e.preventDefault()\r\n\r\n    // Create a FormData object to append the file data\r\n    const formData = new FormData()\r\n    formData.append('attachment', attachment)\r\n\r\n    // Combine input values into a single field in the form data\r\n    const fieldData = whyWhyAnalysisList.join(',')\r\n    setFormData({ WhyWhyAnalysis: fieldData })\r\n\r\n    // Append other data to the FormData object\r\n    formData.append('MachineName', MachineName)\r\n    formData.append('BreakdownStartDate', BreakdownStartDate)\r\n    formData.append('attachment', attachment)\r\n    // ... (append other data)\r\n    axios\r\n      .put(`https://backendmaintenx.onrender.com/api/breakdown/${id}`, {\r\n        MachineName,\r\n        BreakdownStartDate,\r\n        BreakdownEndDate,\r\n        BreakdownStartTime,\r\n        BreakdownEndTime,\r\n        Shift,\r\n        LineName,\r\n        Operations,\r\n        BreakdownPhenomenons,\r\n        BreakdownType,\r\n        DetectOCC,\r\n        // BreakdownTime,\r\n        ActionTaken,\r\n        // WhyWhyAnalysis,\r\n        // WhyWhyAnalysis,\r\n        WhyWhyAnalysis: fieldData,\r\n        whyWhyAnalysisList: fieldData,\r\n        RootCause,\r\n        PreventiveAction,\r\n        CorrectiveAction,\r\n        TargetDate,\r\n        Responsibility,\r\n        HD,\r\n        Remark,\r\n        Status: 'pending',\r\n        attachment,\r\n        Location,\r\n        Image,\r\n        SpareParts,\r\n        Cost,\r\n        whyWhyAnalysisList,\r\n      })\r\n      .then((result) => {\r\n        setSuccessMessage('Form submitted successfully!')\r\n        console.log(formData)\r\n        setMachineName('')\r\n        setBreakdownStartDate('')\r\n        setBreakdownEndDate('')\r\n        setBreakdownStartTime('')\r\n        setBreakdownEndTime('')\r\n        setShift('')\r\n        setLineName('')\r\n        setOperations('')\r\n        setBreakdownPhenomenons('')\r\n        setStatus('pending')\r\n        setLocation('')\r\n        setImage('')\r\n        setPreventiveAction('')\r\n        setCorrectiveAction('')\r\n        setCost('')\r\n        setSpareParts('')\r\n        setWhyWhyAnalysis([])\r\n        setWhyWhyAnalysisList([])\r\n        // setWhyWhyAnalysisList()\r\n        console.log('Form submitted!')\r\n        console.log('whyWhyAnalysisList:', whyWhyAnalysisList)\r\n        // setAttachment('')\r\n\r\n        // Assuming you have a navigate function or useHistory from react-router-dom\r\n        // Navigate back to the previous page\r\n        setSuccessMessage('Form submitted successfully!')\r\n        setTimeout(() => {\r\n          setSuccessMessage('')\r\n          // Assuming you have a navigate function or useHistory from react-router-dom\r\n          // Navigate back to the previous page\r\n          navigate(-1)\r\n        }, 5000)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  const [attachment, setAttachment] = useState(null)\r\n  console.log(whyWhyAnalysisList)\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div\r\n          className=\"container\"\r\n          style={{\r\n            border: '2px solid #ccc',\r\n            backgroundColor: '',\r\n            padding: '20px',\r\n            borderRadius: '10px',\r\n            boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n            width: '95%',\r\n          }}\r\n        >\r\n          {successMessage && (\r\n            <div className=\"alert alert-success\" role=\"alert\" style={{ marginTop: '10px' }}>\r\n              {successMessage}\r\n            </div>\r\n          )}\r\n          <form method=\"post\" onSubmit={Update}>\r\n            {/* Add Breakdown Detail Fields */}\r\n            {/* <h3>Add Breakdown Detail</h3> */}\r\n            <div className=\"row g-2\">\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"machineName\">Machine Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control col-sm-6\"\r\n                  name=\"MachineName\"\r\n                  value={MachineName}\r\n                  disabled // This makes the input read-only\r\n                  onChange={(e) => setMachineName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"breakdownStartDate\">Breakdown Start Date:</label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control col-sm-6\"\r\n                  name=\"BreakdownDate\"\r\n                  value={BreakdownStartDate}\r\n                  disabled\r\n                  onChange={(e) => setBreakdownStartDate(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"location\">Location:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control col-sm-6\"\r\n                  name=\"Location\"\r\n                  value={Location}\r\n                  disabled\r\n                  onChange={(e) => setLocation(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"shift\">Shift:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control col-sm-6\"\r\n                  name=\"Shift\"\r\n                  value={Shift}\r\n                  disabled\r\n                  onChange={(e) => setShift(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"lineName\">Line Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"LineName\"\r\n                  className=\"form-control col-sm-6\"\r\n                  value={LineName}\r\n                  disabled\r\n                  onChange={(e) => setLineName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"operations\">Operations:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control col-sm-6\"\r\n                  name=\"Operations\"\r\n                  value={Operations}\r\n                  disabled\r\n                  onChange={(e) => setOperations(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"breakdownPhenomen\">Breakdown Phenomenon:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"BreakdownPhenomenons\"\r\n                  className=\"form-control col-sm-6\"\r\n                  value={BreakdownPhenomenons}\r\n                  disabled\r\n                  onChange={(e) => setBreakdownPhenomenons(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"breakdownStartTime\">Breakdown Start Time:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  disabled\r\n                  className=\"form-control col-sm-6\"\r\n                  name=\"BreakdownTime\"\r\n                  value={BreakdownStartTime}\r\n                  onChange={(e) => setBreakdownStartTime(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"breakdownType\">Breakdown Type:</label>\r\n\r\n                <select\r\n                  className=\"form-control col-sm-6\"\r\n                  required\r\n                  id=\"BreakdownType\"\r\n                  name=\"BreakdownType\"\r\n                  value={BreakdownType}\r\n                  onChange={(e) => setBreakdownType(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select an option</option>\r\n                  <option value=\"Mechanical\">Mechanical</option>\r\n                  <option value=\"Electrical\">Electrical</option>\r\n                  <option value=\"Electronic\">Electronic</option>\r\n                  <option value=\"Hydrolic\">Hydrolic</option>\r\n                  <option value=\"Neumatic\">Neumatic</option>\r\n                  <option value=\"Production Setting\">Production Setting</option>\r\n                </select>\r\n              </div>\r\n              {/* <div className=\"col-md-6\">\r\n                <label htmlFor=\"spareparts\">Spare Parts:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  name=\"SpareParts\"\r\n                  className=\"form-control col-sm-6\"\r\n                  value={SpareParts}\r\n                  onChange={(e) => setSpareParts(e.target.value)}\r\n                />\r\n              </div> */}\r\n              {/* <div className=\"col-md-5\">\r\n                <label htmlFor=\"whyWhy\">Why-Why Analysis:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  // required\r\n                  className=\"form-control col-sm-5\"\r\n                  name=\"WhyWhyAnalysis\"\r\n                  // value={WhyWhyAnalysis}\r\n                  value={WhyWhyAnalysis}\r\n                  onChange={handleInputChange}\r\n                  // onChange={(e) => setWhyWhyAnalysis(e.target.value)}\r\n                />\r\n                <button type=\"button\" onClick={handleButtonClick}>\r\n                  Add Input\r\n                </button>\r\n              </div>\r\n              <div>\r\n                <h6>Content:</h6>\r\n                <ul>\r\n                  {whyWhyAnalysisList &&\r\n                    whyWhyAnalysisList.map((item, index) => <li key={index}>{item}</li>)}\r\n                </ul>\r\n              </div> */}\r\n              {/* <button type=\"button\" onClick={handleButtonClick}>\r\n                Add Input\r\n              </button> */}\r\n\r\n              <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                <div className=\"col-md-5\" style={{ marginRight: '10px' }}>\r\n                  <label htmlFor=\"whyWhy\">Why-Why Analysis:</label>\r\n                  <textarea\r\n                    style={{ display: '' }}\r\n                    type=\"text\"\r\n                    className=\"form-control col-sm-5\"\r\n                    name=\"WhyWhyAnalysis\"\r\n                    value={WhyWhyAnalysis}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: '',\r\n                    marginRight: '15px',\r\n                    // alignItems: 'center',\r\n                    marginTop: '10px',\r\n                  }}\r\n                >\r\n                  <CButton>\r\n                    <CIcon icon={cilPlus} className=\"ml-2\" onClick={handleButtonClick} />\r\n                  </CButton>\r\n                </div>\r\n                {/* </div> */}\r\n                <div style={{ display: '' }}>\r\n                  <h6>Add:</h6>\r\n                  <ul>\r\n                    {whyWhyAnalysisList.map((item, index) => (\r\n                      <li key={index}>{`WhyWhy${index + 1}: ${item}`}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              {/* <div className=\"col-md-6\">\r\n                <label htmlFor=\"cost\">Cost:</label>\r\n                <input\r\n                  type=\"number\"\r\n                  required\r\n                  name=\"Cost\"\r\n                  className=\"form-control col-sm-6\"\r\n                  value={Cost}\r\n                  onChange={(e) => setCost(e.target.value)}\r\n                />\r\n              </div> */}\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"rootCause\">Root Cause:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control col-sm-6\"\r\n                  name=\"RootCause\"\r\n                  value={RootCause}\r\n                  onChange={(e) => setRootCause(e.target.value)}\r\n                />\r\n              </div>\r\n              {/* <div className=\"col-md-6\">\r\n                <label htmlFor=\"PreventiveAction\">Preventive Action:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control col-sm-6\"\r\n                  name=\"PreventiveAction\"\r\n                  value={PreventiveAction}\r\n                  onChange={(e) => setPreventiveAction(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"correctiveAction\">Corrective Action:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control col-sm-6\"\r\n                  name=\"CorrectiveAction\"\r\n                  value={CorrectiveAction}\r\n                  onChange={(e) => setCorrectiveAction(e.target.value)}\r\n                />\r\n              </div> */}\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"targetDate\">Target Date:</label>\r\n                <input\r\n                  type=\"date\"\r\n                  required\r\n                  className=\"form-control col-sm-6\"\r\n                  name=\"TargetDate\"\r\n                  value={TargetDate}\r\n                  onChange={(e) => setTargetDate(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"responsibility\">Responsibility:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control col-sm-6\"\r\n                  name=\"Responsibility\"\r\n                  value={Responsibility}\r\n                  onChange={(e) => setResponsibility(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"hd\">HD:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  name=\"HD\"\r\n                  className=\"form-control col-sm-6\"\r\n                  value={HD}\r\n                  onChange={(e) => setHD(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"remark\">Remark:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"form-control col-sm-6\"\r\n                  name=\"Remark\"\r\n                  value={Remark}\r\n                  onChange={(e) => setRemark(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"BreakdownEndDate\">BreakdownEndDate:</label>\r\n                <input\r\n                  type=\"date\"\r\n                  required\r\n                  className=\"form-control col-sm-6\"\r\n                  name=\"BreakdownEndDate\"\r\n                  value={BreakdownEndDate}\r\n                  onChange={(e) => setBreakdownEndDate(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"BreakdownEndTime\">BreakdownEndTime:</label>\r\n                <input\r\n                  type=\"time\"\r\n                  required\r\n                  className=\"form-control col-sm-6\"\r\n                  name=\"BreakdownEndTime\"\r\n                  value={BreakdownEndTime}\r\n                  onChange={(e) => setBreakdownEndTime(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label htmlFor=\"attachment\">Attachment:</label>\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"form-control col-sm-6\"\r\n                  onChange={convertToBse64}\r\n                ></input>\r\n              </div>\r\n\r\n              <div style={{ marginTop: '20px' }}>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: '20%', marginBottom: '10px' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n"],"names":["useNavigate","_useState","useState","_useState2","_slicedToArray","setbreakdownType","_useState3","_useState4","setFormattedChartData","_useState5","_useState6","assets","setAssets","_useState7","_useState8","totalTasks","setTotalTasks","_useState9","_useState10","breakdowns","setBreakdown","_useState11","_useState12","totalBreakdown","setTotalBreakdown","_useState13","_useState14","pendingTaskCount","setPendingTaskCount","_useState15","_useState16","_useState17","_useState18","todaysTaskCount","setTodaysTaskCount","_useState19","_useState20","completedTasksCount","setCompletedTasksCount","today","Date","formattedToday","concat","getFullYear","String","getMonth","padStart","getDate","todaysScheduledAssets","filter","asset","nextDate","todaysScheduledAssetsnok","status","useEffect","fetch","then","response","json","fetchedBreakdowns","aggregatedData","aggregated","reduce","acc","curr","BreakdownType","chartData","Object","entries","map","_ref","_ref2","breakdownType","value","catch","error","console","getbreakdownRecord","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dataReq","dataRes","i","wrap","_context","prev","next","sent","log","length","push","stop","apply","arguments","fetchData","_ref4","_callee2","fetchedTasks","pendingTasks","completedTasks","currentDate","lastDayOfMonth","_context2","sendSMS","numbers","t0","_useState21","MachineName","BreakdownStartDate","BreakdownEndDate","BreakdownStartTime","BreakdownEndTime","Shift","LineName","Operations","BreakdownPhenomenons","OCC","BreakdownTime","ActionTaken","WhyWhyAnalysis","RootCause","PermanentAction","TargetDate","Responsibility","HD","Remark","Status","_useState22","formData","selectedUsers","message","encodeURIComponent","url","data","_jsxs","CRow","children","_jsx","CCol","sm","lg","className","CIcon","icon","cilGraph","size","CDropdown","alignment","CDropdownToggle","color","caret","cilOptions","CDropdownMenu","NavLink","to","CDropdownItem","cilStorage","cilTask","cilCheckCircle","useLocation","state","username","userRoll","setLineChartData","setLineChartLabels","aggregatedByLineName","lineChartData","lineName","lineChartLabels","keys","convertToLineChartLabels","_ref5","_Fragment","style","marginLeft","WidgetsDropdown","CCard","BreakDown","id","useParams","navigate","setMachineName","setBreakdownStartDate","setBreakdownEndDate","setBreakdownStartTime","setBreakdownEndTime","setShift","setLineName","setOperations","setBreakdownPhenomenons","setBreakdownType","DetectOCC","_useState23","_useState24","_useState25","_useState26","setRootCause","_useState27","_useState28","PreventiveAction","setPreventiveAction","_useState29","_useState30","CorrectiveAction","setCorrectiveAction","_useState31","_useState32","setTargetDate","_useState33","_useState34","setResponsibility","_useState35","_useState36","setHD","_useState37","_useState38","setRemark","_useState39","_useState40","setStatus","_useState41","_useState42","Location","setLocation","_useState43","_useState44","SpareParts","setSpareParts","_useState45","_useState46","Cost","setCost","_useState47","_useState48","setWhyWhyAnalysis","_useState49","_useState50","whyWhyAnalysisList","setWhyWhyAnalysisList","_useState51","_useState52","setFormData","_useState53","_useState54","successMessage","setSuccessMessage","axios","get","_useState55","_useState56","Image","setImage","_useState57","_useState58","_useState59","_useState60","attachment","border","backgroundColor","padding","borderRadius","boxShadow","width","role","marginTop","method","onSubmit","e","preventDefault","FormData","append","fieldData","join","put","_defineProperty","result","setTimeout","err","htmlFor","type","name","disabled","onChange","target","required","display","alignItems","marginRight","CButton","cilPlus","onClick","_toConsumableArray","item","index","reader","FileReader","readAsDataURL","files","onload","onerror","marginBottom"],"sourceRoot":""}