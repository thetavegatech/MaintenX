{"version":3,"file":"static/js/803.ef25e338.chunk.js","mappings":"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","sources":["views/User/userForm.js","routes.js","views/User/editUser.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","views/QrScanner.js","components/AppHeader.js","assets/logo.svg","components/AppSidebar.js","_nav.js","layout/DefaultLayout.js","slices/usersApiSlice.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst UserForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phoneNumber: '',\r\n    email: '',\r\n    address: '', // Assuming you have an address field in your form\r\n    Location: '',\r\n    plant: '',\r\n  })\r\n  const navigate = useNavigate()\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  // const handleSubmit = async (e) => {\r\n  //   e.preventDefault()\r\n\r\n  //   try {\r\n  //     const response = await axios.post('https://mms-backend-n2zv.onrender.com/UserNo', formData)\r\n  //     console.log('User created successfully:', response.data)\r\n  //     console.log('location', Location)\r\n  //     navigate(-1)\r\n  //     // You can handle further actions here, such as displaying a success message or redirecting the user.\r\n  //   } catch (error) {\r\n  //     console.error('Error creating user:', error.response.data.error)\r\n  //     // Handle error cases, such as displaying an error message to the user.\r\n  //   }\r\n  // }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    try {\r\n      // Destructure form data from the state\r\n      const {\r\n        name,\r\n        phoneNumber,\r\n        email,\r\n        address, // Assuming you have an address field in your form\r\n        Location,\r\n        plant,\r\n      } = formData\r\n      // setImage('')\r\n      // const { name, phoneNumber, email, address, Location } = formData\r\n      console.log('Asset Name:', name)\r\n      console.log('Form Data:', formData)\r\n      console.log('MachineNo:', Location)\r\n      console.log('plant:', plant)\r\n      // ... continue with other fields\r\n      // setSuccessMessage('Form submitted successfully!')\r\n\r\n      // Your fetch logic here\r\n      const response = await fetch('http://localhost:5000/userInfo', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n          Accept: 'application/json',\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      })\r\n      navigate(-1)\r\n\r\n      const data = await response.json()\r\n      console.log('Response from server:', data)\r\n      // uploadImage(e, data._id)\r\n      // navigate(-1)\r\n    } catch (error) {\r\n      console.error('Error:', error)\r\n      // navigate(-1)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"container-lg\"\r\n      style={{\r\n        border: '2px solid #ccc',\r\n        backgroundColor: '',\r\n        padding: '20px',\r\n        borderRadius: '10px',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n        width: '90%',\r\n      }}\r\n    >\r\n      <div className=\"container\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"row g-2\">\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"name\">Name:</label>\r\n              <input\r\n                className=\"form-control col-sm-6\"\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"phoneNumber\">Phone Number:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"phoneNumber\"\r\n                className=\"form-control col-sm-6\"\r\n                name=\"phoneNumber\"\r\n                value={formData.phoneNumber}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"address\">Address:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control col-sm-6\"\r\n                id=\"address\"\r\n                name=\"address\"\r\n                value={formData.address}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"email\">Email:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control col-sm-6\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-md-6\">\r\n              <label htmlFor=\"Location\">Location:</label>\r\n              {/* <input\r\n                type=\"text\"\r\n                className=\"form-control col-sm-6\"\r\n                id=\"Location\"\r\n                name=\"Location\"\r\n                value={formData.Location}\r\n                onChange={handleChange}\r\n              /> */}\r\n              <select\r\n                className=\"form-control col-sm-6\"\r\n                required\r\n                // id=\"assetLocation\"\r\n                name=\"Location\"\r\n                value={formData.Location}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\">Select an option</option>\r\n                <option value=\"Plant 1\">Plant 1</option>\r\n                <option value=\"Plant 2\">Plant 2</option>\r\n                <option value=\"Plant 3\">Plant 3</option>\r\n                <option value=\"Plant 4\">Plant 4</option>\r\n              </select>\r\n            </div>\r\n            {/* <div className=\"col-md-6\">\r\n              <label\r\n                htmlFor=\"assetLocation\"\r\n                className=\"form-label\"\r\n                style={{ marginBottom: '10px' }}\r\n              >\r\n                Location:\r\n              </label>\r\n              <select\r\n                className=\"form-control col-sm-6\"\r\n                required\r\n                // id=\"assetLocation\"\r\n                name=\"Location\"\r\n                value={formData.Location}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\">Select an option</option>\r\n                <option value=\"Plant 1\">Plant 1</option>\r\n                <option value=\"Plant 2\">Plant 2</option>\r\n                <option value=\"Plant 3\">Plant 3</option>\r\n                <option value=\"Plant 4\">Plant 4</option>\r\n              </select>\r\n            </div> */}\r\n            {/* <div className=\"col-md-6\">\r\n              <label htmlFor=\"Location\">Location:</label>\r\n              <select\r\n                className=\"form-control col-sm-6\"\r\n                required\r\n                id=\"Location\"\r\n                name=\"Location\"\r\n                value={formData.Location}\r\n                onChange={handleChange}\r\n              >\r\n                <option value=\"\">Select an option</option>\r\n                <option value=\"Plant 1\">Plant 1</option>\r\n                <option value=\"Plant 2\">Plant 2</option>\r\n                <option value=\"Plant 3\">Plant 3</option>\r\n                <option value=\"Plant 4\">Plant 4</option>\r\n              </select>\r\n            </div> */}\r\n\r\n            <div className=\"col-xs-12\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserForm\r\n","import React from 'react'\nimport UserForm from './views/User/userForm'\nimport EditUser from './views/User/editUser'\n\nconst Login = React.lazy(() => import('./views/pages/login/Login'))\nconst Logout = React.lazy(() => import('./views/pages/Logout'))\n\n// ./layout/DefaultLayout\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst AssetForm = React.lazy(() => import('./views/assetForm/AssetForm'))\nconst AssetTable = React.lazy(() => import('./views/assetTable/AssetTable'))\nconst Breakdown = React.lazy(() => import('./views/breakdown/Breakdown'))\nconst breakdownForm = React.lazy(() => import('./views/breakdown/BreakdownForm'))\nconst BreakdownHistory = React.lazy(() => import('./views/breakdown/BreakdownHistory'))\n// const editasset = React.lazy(() => import('./views/assetTable/EditAsset'))\nconst EditAsset = React.lazy(() => import('./views/editasset/EditAsset'))\nconst ProductionBD = React.lazy(() => import('./views/production/ProductionBD'))\nconst Production = React.lazy(() => import('./views/production/Production'))\nconst PBDStatus = React.lazy(() => import('./views/production/PBDStatus'))\nconst TaskTable = React.lazy(() => import('./views/tasks/TaskTable'))\nconst TaskForm = React.lazy(() => import('./views/tasks/TaskForm'))\nconst EditTask = React.lazy(() => import('./views/tasks/EditTask'))\nconst Users = React.lazy(() => import('./views/User/Users'))\n// const BreakDownRecord = React.lazy(() => import('./views/breakdown/BreakDownRecord'))\nconst BreakDownRecord = React.lazy(() => import('./views/breakdown/BreakDownRecord.js'))\nconst AssetRecord = React.lazy(() => import('./views/assetTable/AssetRecord'))\nconst TaskRecord = React.lazy(() => import('./views/tasks/TaskRecord'))\nconst PMSchedule = React.lazy(() => import('./views/PM/PMSchedule'))\nconst EditPM = React.lazy(() => import('./views/PM/EditPM'))\nconst TBM = React.lazy(() => import('./views/TBM'))\nconst TBMEdit = React.lazy(() => import('./views/TBMEdit'))\nconst CBM = React.lazy(() => import('./views/CBM'))\nconst CBMEdit = React.lazy(() => import('./views/CBMEdit'))\nconst PM = React.lazy(() => import('./views/PM'))\nconst CBMForm = React.lazy(() => import('./views/CBMForm'))\nconst TBMForm = React.lazy(() => import('./views/TBMForm'))\n// Base\n\n//Forms\n\n// Icons\n\n// Notifications\n\nconst routes = [\n  { path: '/login', exact: true, name: 'Login', element: Login },\n  { path: '/logout', exact: true, name: 'Logout', element: Logout },\n\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/assetRecord/:id', exact: true, name: 'assetRecord', element: AssetRecord },\n\n  {\n    path: '/dashboard',\n    name: 'Dashboard',\n    element: Dashboard,\n    // element: <PrivateRoute component={<Dashboard />} IsAuthenticated={IsAuthenticated} />,\n    // element: withAuthorization(Dashboard, ['admin', 'production', 'maintenance']),\n  },\n  { path: '/assetForm', name: 'AssetForm', element: AssetForm },\n  { path: '/assetTable', name: 'AssetTable', element: AssetTable },\n  {\n    path: '/breakdown',\n    name: 'Breakdown',\n    element: Breakdown,\n  },\n  { path: '/breakdownForm', name: 'BreakdownForm', element: breakdownForm },\n  { path: '/breakdownHistory', name: 'BreakdownHistory', element: BreakdownHistory },\n  { path: '/editasset/:id', name: 'EditAsset', element: EditAsset },\n  {\n    path: '/productionBD/:id',\n    name: 'ProductionDB',\n    element: ProductionBD,\n  },\n  {\n    path: '/production',\n    name: 'Production',\n    element: Production,\n  },\n  { path: '/pbdStatus/:id', name: 'PBDStatus', element: PBDStatus },\n  { path: '/taskTable', name: 'TaskTable', element: TaskTable },\n\n  {\n    path: '/taskForm',\n    name: 'TaskForm',\n    element: TaskForm,\n  },\n  { path: '/editTask/:id', name: 'EditTask', element: EditTask },\n  { path: '/users', name: 'Users', element: Users },\n  { path: '/userForm', name: 'UserForm', element: UserForm },\n  { path: '/editUser/:id', name: 'EditUser', element: EditUser },\n  { path: '/breakDownRecord/:id', name: 'breakdownrecord', element: BreakDownRecord },\n  { path: '/assetRecord/:id', name: 'assetRecord', element: AssetRecord },\n  { path: '/taskRecord/:id', name: 'taskRecord', element: TaskRecord },\n  { path: '/pmSchedule', name: 'pmSchedule', element: PMSchedule },\n  { path: '/editPM/:id', name: 'editPM', element: EditPM },\n  { path: '/tbm', name: 'tbm', element: TBM },\n  { path: '/edittbm/:id', name: 'edittbm', element: TBMEdit },\n  { path: '/pm', name: 'pm', element: PM },\n  { path: '/cbm', name: 'cbm', element: CBM },\n  { path: '/editcbm/:id', name: 'editcbm', element: CBMEdit },\n  { path: '/cbmForm', name: 'CBMForm', element: CBMForm },\n  { path: '/tbmForm', name: 'TBMForm', element: TBMForm },\n]\n\nexport default routes\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nexport default function EditUser() {\r\n  const { id } = useParams()\r\n  const navigate = useNavigate()\r\n  const [userData, setUserData] = useState({\r\n    name: '',\r\n    address: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    Location: '',\r\n  })\r\n  const [address, setAddress] = useState('')\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [])\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/UserInfo/${id}`)\r\n      const { name, phoneNumber, address, email, Location } = response.data\r\n      setUserData({ name, phoneNumber, address, email, Location })\r\n      setAddress(response.data.address)\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error)\r\n    }\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target\r\n    setUserData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }))\r\n  }\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      await axios.put(`http://localhost:5000/UserInfo/${id}`, userData)\r\n      // Clear form data after successful update\r\n      setUserData({\r\n        name: '',\r\n        address: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        Location: '',\r\n      })\r\n      // Navigate back to the previous page\r\n      navigate(-1)\r\n    } catch (error) {\r\n      console.error('Error updating user:', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"container-lg\"\r\n      style={{\r\n        border: '2px solid #ccc',\r\n        backgroundColor: '',\r\n        padding: '20px',\r\n        borderRadius: '10px',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n        width: '90%',\r\n      }}\r\n    >\r\n      <div className=\"tab-content1\">\r\n        <form onSubmit={handleUpdate} style={{ marginLeft: '12%' }}>\r\n          <div className=\"row g-2\">\r\n            <div className=\"col-md-5\">\r\n              <label htmlFor=\"name\">Name:</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className=\"form-control col-sm-4\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                value={userData.name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <label htmlFor=\"name\">Phone No:</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className=\"form-control col-sm-4\"\r\n                name=\"phoneNumber\"\r\n                id=\"phoneNumber\"\r\n                value={userData.phoneNumber}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <label htmlFor=\"name\">Address:</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className=\"form-control col-sm-4\"\r\n                name=\"address\"\r\n                id=\"address\"\r\n                value={userData.address}\r\n                onChange={handleInputChange}\r\n                // value={address}\r\n                // onChange={(e) => setAddress(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <label htmlFor=\"name\">Email:</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className=\"form-control col-sm-4\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={userData.email}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <label htmlFor=\"Location\">Location:</label>\r\n              <input\r\n                type=\"text\"\r\n                required\r\n                className=\"form-control col-sm-4\"\r\n                name=\"Location\"\r\n                id=\"Location\"\r\n                value={userData.Location}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div style={{ marginTop: '20px' }}>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                style={{ width: '30%', marginBottom: '10px' }}\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","// import React, { Suspense } from 'react'\n// import { Navigate, Route, Routes, useLocation } from 'react-router-dom'\n// import PropTypes from 'prop-types' // Import PropTypes\n// import { CContainer, CSpinner } from '@coreui/react'\n// import routes from '../routes'\n// import { useSelector } from 'react-redux'\n\n// const IsAuthenticated = () => {\n//   const isAuthenticated = useSelector((state) => !!state.auth.userInfo?.name)\n//   return isAuthenticated\n// }\n\n// const AppContent = () => {\n//   const location = useLocation()\n\n//   return (\n//     <CContainer lg>\n//       <Suspense fallback={<CSpinner color=\"primary\" />}>\n//         <Routes>\n//           {routes.map(\n//             (route, idx) =>\n//               route.element && (\n//                 <Route\n//                   key={idx}\n//                   path={route.path}\n//                   element={<ConditionalElement element={route.element} />}\n//                 />\n//               ),\n//           )}\n//           <Route\n//             path=\"/\"\n//             element={<Navigate to=\"/login\" replace />}\n//             shouldNavigate={() => location.pathname !== '/login'}\n//           />\n//         </Routes>\n//       </Suspense>\n//     </CContainer>\n//   )\n// }\n\n// const ConditionalElement = ({ element: Element }) => {\n//   const isAuthenticated = IsAuthenticated()\n\n//   return isAuthenticated ? <Element /> : <Navigate to=\"/login\" replace />\n// }\n\n// // Add PropTypes validation for the ConditionalElement component\n// ConditionalElement.propTypes = {\n//   element: PropTypes.elementType.isRequired,\n// }\n\n// export default React.memo(AppContent)\n\nimport React, { Suspense } from 'react'\nimport { Navigate, Route, Routes, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport routes from '../routes'\nimport { useSelector } from 'react-redux'\n\nconst IsAuthenticated = () => {\n  const isAuthenticated = useSelector((state) => !!state.auth.userInfo?.name)\n  return isAuthenticated\n}\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map(\n            (route, idx) =>\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  element={<ConditionalRouteElement route={route} />}\n                />\n              ),\n          )}\n          <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nconst ConditionalRouteElement = ({ route }) => {\n  const isAuthenticated = IsAuthenticated()\n  const location = useLocation() // Use useLocation hook\n\n  if (isAuthenticated || location.pathname === '/login') {\n    return <route.element />\n  } else {\n    return <Navigate to=\"/login\" replace />\n  }\n}\n\nConditionalRouteElement.propTypes = {\n  route: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    element: PropTypes.elementType.isRequired,\n  }).isRequired,\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div>\n        <a href=\"https://www.thetavega.in/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Thetavega Tech\n        </a>\n        <span className=\"ms-1\">&copy; 2023 </span>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","// import React, { useState } from 'react'\r\n// import { QrReader } from 'react-qr-reader' // Import QrReader as a named import\r\n// import PropTypes from 'prop-types'\r\n// import './QrScanner.css'\r\n\r\n// const QrScanner = ({ onClose }) => {\r\n//   const [scannedData, setScannedData] = useState(null)\r\n\r\n//   const handleScan = (data) => {\r\n//     if (data) {\r\n//       setScannedData(data)\r\n//       alert(`Scanned Data: ${data}`)\r\n//       onClose() // Close the scanner after a successful scan\r\n//     }\r\n//   }\r\n\r\n//   const handleError = (err) => {\r\n//     console.error(err)\r\n//   }\r\n\r\n//   return (\r\n//     <div\r\n//       className=\"qr-scanner-modal\"\r\n//       style={{\r\n//         position: 'fixed',\r\n//         top: '0',\r\n//         left: '0',\r\n//         width: '100%',\r\n//         height: '100%',\r\n//         background: 'rgba(0, 0, 0, 0.5)',\r\n//         // width: '100%',\r\n//         // height: '100%',\r\n//         display: 'flex',\r\n//         justifyContent: 'center',\r\n//       }}\r\n//     >\r\n//       <div\r\n//         className=\"qr-scanner-content\"\r\n//         style={{ background: 'white', padding: '20px', borderRadius: '20px' }}\r\n//       >\r\n//         <QrReader\r\n//           delay={300}\r\n//           onError={handleError}\r\n//           onResult={(result) => {\r\n//             if (!!result) {\r\n//               handleScan(result.text)\r\n//             }\r\n//           }}\r\n//           style={{ width: '100%' }}\r\n//         />\r\n//         <button onClick={onClose}>Close</button>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// QrScanner.propTypes = {\r\n//   onClose: PropTypes.func.isRequired,\r\n// }\r\n\r\n// export default QrScanner\r\nimport React, { useState, useEffect } from 'react'\r\nimport { QrReader } from 'react-qr-reader'\r\nimport PropTypes from 'prop-types'\r\nimport './QrScanner.css'\r\nimport { NavLink, useNavigate } from 'react-router-dom'\r\n\r\nconst QrScanner = ({ onClose }) => {\r\n  const [scannedData, setScannedData] = useState(null)\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    const checkCameraAccess = async () => {\r\n      try {\r\n        navigator.mediaDevices.getUserMedia({ video: true }).then((stream) => {\r\n          console.log('Camera access granted')\r\n          alert('Camera access granted')\r\n          stream.getTracks().forEach((track) => track.stop())\r\n        })\r\n      } catch (err) {\r\n        console.error('Camera access denied:', err)\r\n        alert('Please allow camera access to scan QR codes.')\r\n      }\r\n    }\r\n\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n      console.log('navigator.mediaDevices and getUserMedia are available')\r\n      checkCameraAccess()\r\n    } else {\r\n      console.error(\r\n        'navigator.mediaDevices or navigator.mediaDevices.getUserMedia is not available',\r\n      )\r\n      alert('Camera not supported on this device or browser.')\r\n    }\r\n  }, [])\r\n\r\n  // const handleScan = (data) => {\r\n  //   if (data) {\r\n  //     setScannedData(data)\r\n  //     alert(`Scanned Data: ${data}`)\r\n  //     navigate(`${data}`)\r\n  //     onClose() // Close the scanner after a successful scan\r\n  //   }\r\n  // }\r\n\r\n  const handleScan = (data) => {\r\n    if (data) {\r\n      setScannedData(data)\r\n      alert(`Scanned Data: ${data}`)\r\n      window.open(data, '_blank') // Open the scanned URL in a new tab\r\n      onClose() // Close the scanner after a successful scan\r\n    }\r\n  }\r\n\r\n  const handleError = (err) => {\r\n    console.error('QR Scanner Error:', err)\r\n  }\r\n\r\n  return (\r\n    <div className=\"qr-scanner-modal\">\r\n      <div className=\"qr-scanner-content\">\r\n        <QrReader\r\n          delay={300}\r\n          onError={handleError}\r\n          onResult={(result) => {\r\n            if (result?.text) {\r\n              handleScan(result.text)\r\n            }\r\n          }}\r\n          constraints={{ facingMode: 'environment' }}\r\n          style={{ width: '100%' }}\r\n        />\r\n        <button onClick={onClose}>Close</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nQrScanner.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default QrScanner\r\n","// import React, { useState, useEffect } from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { NavLink, useNavigate } from 'react-router-dom'\n// import '../components/header/appheader.css'\n// import {\n//   CContainer,\n//   CHeader,\n//   CHeaderBrand,\n//   CHeaderDivider,\n//   CHeaderNav,\n//   CHeaderToggler,\n//   CNavLink,\n//   CNavItem,\n// } from '@coreui/react'\n// import CIcon from '@coreui/icons-react'\n// import { cilMenu } from '@coreui/icons' // Removed other icons for simplicity\n// import { AppBreadcrumb } from './index'\n// import { useLocation } from 'react-router-dom'\n// import { useLogoutMutation } from 'src/slices/usersApiSlice'\n// import { logout } from '../slices/authSlice'\n\n// const AppHeader = () => {\n//   const sidebarShow = useSelector((state) => state.sidebarShow)\n\n//   const userrole = useSelector((state) => state.auth.userInfo?.role) || ''\n//   const username = useSelector((state) => state.auth.userInfo?.name)\n\n//   const dispatch = useDispatch()\n//   const navigate = useNavigate()\n\n//   const [logoutApiCall] = useLogoutMutation()\n\n//   const logoutHandler = async () => {\n//     try {\n//       await logoutApiCall().unwrap()\n//       dispatch(logout())\n//       navigate('/login')\n//     } catch (error) {}\n//   }\n\n//   return (\n//     <CHeader position=\"sticky\" className=\"mb-4\">\n//       <CContainer fluid>\n//         <CHeaderToggler\n//           className=\"ps-1\"\n//           onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n//         >\n//           <CIcon icon={cilMenu} size=\"lg\" />\n//         </CHeaderToggler>\n//         <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n//           {/* <CIcon icon={logo} height={48} alt=\"Logo\" /> */}\n//         </CHeaderBrand>\n//         <CHeaderNav className=\"d-none d-md-flex me-auto\">\n//           <CNavItem>\n//             <CNavLink to=\"/dashboard\" component={NavLink}>\n//               Dashboard\n//             </CNavLink>\n//           </CNavItem>\n//           {/* Other navigation items */}\n//         </CHeaderNav>\n//         <CHeaderNav>\n//           <CNavItem>\n//             <h5>Welcome , {username} </h5>\n//             <p>\n//               Role: {userrole} &nbsp;{' '}\n//               <button className=\"button-91\" role=\"button\" onClick={logoutHandler}>\n//                 LogOut\n//               </button>\n//             </p>\n//             {/* <button className=\"button-91\" role=\"button\">\n//               Button 91\n//             </button> */}\n//             {/* <button onClick={logoutHandler}>Logout</button> */}\n//             <CNavLink href=\"#\" style={{ fontSize: '25px', color: 'orange' }}>\n//               {/* {currentUser.name} */}\n//             </CNavLink>\n//           </CNavItem>\n//         </CHeaderNav>\n//       </CContainer>\n//       <CHeaderDivider />\n//       <CContainer fluid>\n//         <AppBreadcrumb />\n//       </CContainer>\n//     </CHeader>\n//   )\n// }\n\n// export default AppHeader\n\n// AppHeader.js\nimport React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NavLink, useNavigate } from 'react-router-dom'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  CButton,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilQrCode, cilBell, cilHelp } from '@coreui/icons'\nimport { cilMenu } from '@coreui/icons'\nimport { AppBreadcrumb } from './index'\nimport { useLogoutMutation } from 'src/slices/usersApiSlice'\nimport { logout } from '../slices/authSlice'\nimport { QrReader } from 'react-qr-reader'\nimport QrScanner from '../views/QrScanner'\n\nconst AppHeader = () => {\n  const [isQrScannerOpen, setIsQrScannerOpen] = useState(false)\n  const [scanResult, setScanResult] = useState('')\n  const sidebarShow = useSelector((state) => state.custom.sidebarShow)\n  const userrole = useSelector((state) => state.auth.userInfo?.role) || ''\n  const username = useSelector((state) => state.auth.userInfo?.name)\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const [logoutApiCall] = useLogoutMutation()\n\n  const toggleQrScanner = () => {\n    setIsQrScannerOpen(!isQrScannerOpen)\n  }\n\n  const logoutHandler = async () => {\n    try {\n      await logoutApiCall().unwrap()\n      dispatch(logout())\n      navigate('/login')\n    } catch (error) {\n      console.error('Logout error:', error)\n    }\n  }\n\n  // const handleScan = (data) => {\n  //   if (data) {\n  //     console.log('QR Code Data:', data)\n  //     setScanResult(data.text)\n  //     setQrModal(false)\n  //   }\n  // }\n\n  const handleError = (error) => {\n    console.error('QR Scanner Error:', error)\n  }\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\" />\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Dashboard\n            </CNavLink>\n          </CNavItem>\n          {/* Other navigation items */}\n        </CHeaderNav>\n        <CHeaderNav>\n          <CNavItem>\n            <h6>Welcome, {username}</h6>\n            <h6>Role: {userrole}</h6>\n          </CNavItem>\n          <CNavItem>\n            {/* <CButton color=\"warning\" onClick={() => setQrModal(true)}>\n              Scan QR Code\n            </CButton> */}\n            <CIcon\n              icon={cilQrCode}\n              size=\"3xl\"\n              onClick={toggleQrScanner}\n              className=\"cursor-pointer\"\n            />\n          </CNavItem>\n        </CHeaderNav>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n      {isQrScannerOpen && <QrScanner onClose={toggleQrScanner} />}\n      {/* <CModal show={qrModal} onClose={() => setQrModal(true)} size=\"lg\">\n        <CModalHeader closeButton>\n          <CModalTitle>Scan QR Code</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <QrReader\n            delay={300}\n            onError={handleError}\n            onScan={handleScan}\n            style={{ width: '100%' }}\n          />\n          {scanResult && (\n            <div>\n              <p>Scanned Data: {scanResult}</p>\n            </div>\n          )}\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setQrModal(false)}>\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal> */}\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","var _style, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 432 720\",\n    style: {\n      enableBackground: \"new 0 0 432 720\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n\\t.st0{fill:#FF6600;}\\r\\n\")), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M414.9,340l4.1,3c10.1,7,11.2,27,0,36l-0.3,0.1L53.7,707.4c-5.4,4.9-12.5,7.6-19.8,7.6h-2.4 C15.2,715,2,702,2,686V37C2,21,15.2,8,31.4,8h12.2c7.5,0,14.7,2.8,20.1,7.8\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.8b7943b29daa1dfbd31c5df0202f3188.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport '../App.css'\nimport { useSelector, useDispatch } from 'react-redux'\nimport logo from '../assets/logo.svg'\nimport {\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDescription,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n} from '@coreui/icons'\n\nimport { CNavItem, CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// Sidebar navigation config\nimport navigation from '../_nav'\nimport { NavLink, useNavigate } from 'react-router-dom'\nimport { logout } from '../slices/authSlice'\nimport { useLogoutMutation } from 'src/slices/usersApiSlice'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.custom.sidebarUnfoldable) // Update 'custom' based on your actual reducer key\n  const sidebarShow = useSelector((state) => state.custom.sidebarShow) // Update 'custom' based on your actual reducer key\n  const userrole = useSelector((state) => state.auth.userInfo?.role)\n\n  const navigate = useNavigate()\n  const [logoutApiCall] = useLogoutMutation()\n\n  const logoutHandler = async () => {\n    // Show a confirmation dialog\n    const confirmLogout = window.confirm('Are you sure you want to logout?')\n\n    // If the user clicks \"OK\", proceed with logout\n    if (confirmLogout) {\n      try {\n        // Your logout API call and logic\n        await logoutApiCall().unwrap()\n        // Dispatch the logout action\n        dispatch(logout())\n        // Navigate to the login page\n        navigate('/login')\n      } catch (error) {\n        console.error('Logout error:', error)\n      }\n    } else {\n      // If the user clicks \"Cancel\", do nothing or handle accordingly\n      console.log('Logout canceled')\n    }\n  }\n\n  const sidebarStyles = {\n    backgroundColor: '#000026', // Dark background color\n    color: '#ffffff', // Text color\n  }\n\n  const sidebarNavStyles = {\n    backgroundColor: '#000026', // Ensures the nav has the same background\n  }\n  // #eefbfd\n\n  const brandTextStyles = {\n    fontSize: '25px',\n    color: 'orange',\n  }\n\n  const navItemStyles = {\n    color: '#ffffff', // Nav item text color\n  }\n\n  const navItemHoverStyles = {\n    color: '#1e90ff', // Hover color\n  }\n\n  const activeNavItemStyles = {\n    backgroundColor: '#1e90ff', // Active link background color\n    color: '#ffffff', // Active link text color\n  }\n\n  const logoutButtonStyles = {\n    backgroundColor: '#000026', // Info button background color\n    border: '1px solid #ddd',\n    color: '#ffffff', // Info button text color\n  }\n\n  const logoutButtonHoverStyles = {\n    backgroundColor: '#138496', // Info button hover color\n  }\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n      style={sidebarStyles}\n    >\n      <CSidebarBrand className=\"d-md-none\">\n        <img src={logo} className=\"logo1\" alt=\"Before Logo\" style={{ height: '45px' }} />\n        <h4 style={brandTextStyles}>Thetavega Tech</h4>\n      </CSidebarBrand>\n      <CSidebarBrand className=\"d-none d-md-flex\">\n        <img\n          src={logo}\n          className=\"logo1\"\n          alt=\"Before Logo\"\n          style={{ marginRight: '20px', height: '45px', marginLeft: '-10%' }}\n        />\n        <h4 style={brandTextStyles}>Thetavega Tech</h4>\n      </CSidebarBrand>\n      <CSidebarNav style={sidebarNavStyles}>\n        {(() => {\n          if (userrole === 'admin') {\n            return (\n              <>\n                <CNavItem\n                  component={NavLink}\n                  to=\"/dashboard\"\n                  style={navItemStyles}\n                  activeStyle={activeNavItemStyles}\n                >\n                  <CIcon customClassName=\"nav-icon\" icon={cilSpeedometer} />\n                  Dashboard\n                </CNavItem>\n                <CNavItem\n                  component={NavLink}\n                  to=\"/assetTable\"\n                  style={navItemStyles}\n                  activeStyle={activeNavItemStyles}\n                >\n                  <CIcon customClassName=\"nav-icon\" icon={cilCalculator} />\n                  AssetTable\n                </CNavItem>\n\n                <CNavItem\n                  component={NavLink}\n                  to=\"/cbm\"\n                  style={navItemStyles}\n                  activeStyle={activeNavItemStyles}\n                >\n                  <CIcon customClassName=\"nav-icon\" icon={cilSpeedometer} />\n                  CBM\n                </CNavItem>\n                <CNavItem\n                  component={NavLink}\n                  to=\"/tbm\"\n                  style={navItemStyles}\n                  activeStyle={activeNavItemStyles}\n                >\n                  <CIcon customClassName=\"nav-icon\" icon={cilSpeedometer} />\n                  TBM\n                </CNavItem>\n                <CNavItem\n                  component={NavLink}\n                  to=\"/production\"\n                  style={navItemStyles}\n                  activeStyle={activeNavItemStyles}\n                >\n                  <CIcon customClassName=\"nav-icon\" icon={cilSpeedometer} />\n                  Production\n                </CNavItem>\n                <CNavItem\n                  component={NavLink}\n                  to=\"/breakdown\"\n                  style={navItemStyles}\n                  activeStyle={activeNavItemStyles}\n                >\n                  <CIcon customClassName=\"nav-icon\" icon={cilPuzzle} />\n                  Breakdown\n                </CNavItem>\n                <CNavItem\n                  component={NavLink}\n                  to=\"/breakdownHistory\"\n                  style={navItemStyles}\n                  activeStyle={activeNavItemStyles}\n                >\n                  <CIcon customClassName=\"nav-icon\" icon={cilPuzzle} />\n                  Breakdown History\n                </CNavItem>\n                <CNavItem\n                  component={NavLink}\n                  to=\"/pmSchedule\"\n                  style={navItemStyles}\n                  activeStyle={activeNavItemStyles}\n                >\n                  <CIcon customClassName=\"nav-icon\" icon={cilPuzzle} />\n                  PM Schedule\n                </CNavItem>\n                {/* <CNavItem\n                  component={NavLink}\n                  to=\"/users\"\n                  style={navItemStyles}\n                  activeStyle={activeNavItemStyles}\n                >\n                  <CIcon customClassName=\"nav-icon\" icon={cilNotes} />\n                  Users\n                </CNavItem> */}\n              </>\n            )\n          } else if (userrole === 'production') {\n            return (\n              <>\n                <CNavItem\n                  component={NavLink}\n                  to=\"/production\"\n                  style={navItemStyles}\n                  activeStyle={activeNavItemStyles}\n                >\n                  <CIcon customClassName=\"nav-icon\" icon={cilSpeedometer} />\n                  Production\n                </CNavItem>\n              </>\n            )\n          } else if (userrole === 'maintenance') {\n            return (\n              <>\n                <CNavItem\n                  component={NavLink}\n                  to=\"/breakdown\"\n                  style={navItemStyles}\n                  activeStyle={activeNavItemStyles}\n                >\n                  <CIcon customClassName=\"nav-icon\" icon={cilPuzzle} />\n                  Breakdown\n                </CNavItem>\n                <CNavItem\n                  component={NavLink}\n                  to=\"/breakdownHistory\"\n                  style={navItemStyles}\n                  activeStyle={activeNavItemStyles}\n                >\n                  <CIcon customClassName=\"nav-icon\" icon={cilPuzzle} />\n                  Breakdown History\n                </CNavItem>\n                <CNavItem\n                  component={NavLink}\n                  to=\"/taskTable\"\n                  style={navItemStyles}\n                  activeStyle={activeNavItemStyles}\n                >\n                  <CIcon customClassName=\"nav-icon\" icon={cilPuzzle} />\n                  PM Schedule\n                </CNavItem>\n              </>\n            )\n          } else {\n            return null\n          }\n        })()}\n      </CSidebarNav>\n      <button\n        type=\"button\"\n        className=\"btn btn-info\"\n        onClick={logoutHandler}\n        style={logoutButtonStyles}\n        onMouseOver={(e) => (e.target.style.backgroundColor = '#138496')}\n        onMouseOut={(e) => (e.target.style.backgroundColor = '#17a2b8')}\n      >\n        Logout\n      </button>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDescription,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\nimport { useSelector } from 'react-redux'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    badge: {\n      color: 'info',\n    },\n  },\n  {\n    component: CNavItem,\n    name: 'AssetTable',\n    to: '/assetTable',\n    icon: <CIcon icon={cilCalculator} customClassName=\"nav-icon\" />,\n    badge: {\n      color: 'info',\n    },\n  },\n  {\n    component: CNavItem,\n    name: 'Production Breakdown',\n    to: '/production',\n    icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    badge: {\n      color: 'info',\n    },\n  },\n  {\n    component: CNavItem,\n    name: 'Breakdown',\n    to: '/breakdown',\n    icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n    badge: {\n      color: 'info',\n    },\n  },\n  {\n    component: CNavItem,\n    name: 'Breakdown History',\n    to: '/breakdownHistory',\n    icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n    badge: {\n      color: 'info',\n    },\n  },\n  {\n    component: CNavItem,\n    name: 'Tasks',\n    to: '/taskTable',\n    icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n    badge: {\n      color: 'info',\n    },\n  },\n  {\n    component: CNavItem,\n    name: 'PMTasks',\n    to: '/pmSchedule',\n    icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n    badge: {\n      color: 'info',\n    },\n  },\n  {\n    component: CNavItem,\n    name: 'Logout',\n    to: '/logout',\n    icon: <CIcon icon={cilDrop} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavItem,\n    name: 'Users',\n    to: '/users',\n    icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n  },\n]\n\nexport default _nav\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport { useSelector } from 'react-redux'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n","import { apiSlice } from './apiSlice'\r\nconst USERS_URL = 'https://backendmaintenx.onrender.com/api/users'\r\n\r\nexport const usersApiSlice = apiSlice.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    login: builder.mutation({\r\n      query: (data) => ({\r\n        url: `${'https://backendmaintenx.onrender.com/api/users'}/auth`,\r\n        method: 'POST',\r\n        body: data,\r\n      }),\r\n    }),\r\n    logout: builder.mutation({\r\n      query: () => ({\r\n        url: `${'https://backendmaintenx.onrender.com/api/users'}/logout`,\r\n        method: 'POST',\r\n      }),\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const { useLoginMutation, useLogoutMutation } = usersApiSlice\r\n"],"names":["_useState","useState","name","phoneNumber","email","address","Location","plant","_useState2","_slicedToArray","formData","setFormData","navigate","useNavigate","handleChange","e","_objectSpread","_defineProperty","target","value","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","preventDefault","console","log","fetch","method","headers","Accept","body","JSON","stringify","sent","json","t0","error","stop","_x","apply","arguments","_jsx","className","style","border","backgroundColor","padding","borderRadius","boxShadow","width","children","onSubmit","_jsxs","htmlFor","type","id","onChange","required","Login","React","Logout","Dashboard","AssetForm","AssetTable","Breakdown","breakdownForm","BreakdownHistory","EditAsset","ProductionBD","Production","PBDStatus","TaskTable","TaskForm","EditTask","Users","BreakDownRecord","AssetRecord","TaskRecord","PMSchedule","EditPM","TBM","TBMEdit","CBM","CBMEdit","routes","path","exact","element","UserForm","useParams","userData","setUserData","_useState3","_useState4","setAddress","useEffect","fetchData","_response$data","_address","axios","get","concat","handleInputChange","_e$target","prevData","handleUpdate","_ref2","_callee2","_context2","put","marginLeft","marginTop","marginBottom","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","curr","index","array","currentPathname","routeName","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","CBreadcrumb","CBreadcrumbItem","href","map","breadcrumb","_createElement","key","AppContent","CContainer","lg","Suspense","fallback","CSpinner","color","Routes","idx","Route","ConditionalRouteElement","Navigate","to","replace","isAuthenticated","useSelector","state","_state$auth$userInfo","auth","userInfo","AppFooter","CFooter","rel","onClose","setScannedData","checkCameraAccess","navigator","mediaDevices","getUserMedia","video","then","stream","alert","getTracks","forEach","track","err","QrReader","delay","onError","onResult","result","text","window","open","constraints","facingMode","onClick","isQrScannerOpen","setIsQrScannerOpen","sidebarShow","custom","userrole","role","username","_state$auth$userInfo2","dispatch","useDispatch","_useLogoutMutation","useLogoutMutation","toggleQrScanner","CHeader","position","fluid","CHeaderToggler","CIcon","icon","cilMenu","size","CHeaderBrand","CHeaderNav","CNavItem","CNavLink","component","NavLink","cilQrCode","CHeaderDivider","QrScanner","AppSidebar","cilSpeedometer","cilCalculator","cilPuzzle","cilDrop","cilNotes","unfoldable","sidebarUnfoldable","logoutApiCall","logoutHandler","confirm","unwrap","logout","brandTextStyles","fontSize","navItemStyles","activeNavItemStyles","CSidebar","visible","onVisibleChange","CSidebarBrand","src","logo","alt","height","marginRight","CSidebarNav","_Fragment","activeStyle","customClassName","onMouseOver","onMouseOut","AppHeader","usersApiSlice","apiSlice","injectEndpoints","endpoints","builder","login","mutation","query","url","useLoginMutation"],"sourceRoot":""}