{"version":3,"file":"static/js/987.3ec70877.chunk.js","mappings":"mWAsBMA,EAAM,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,IAAAK,GAAAC,EAAAA,EAAAA,GAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GA+HT,OA/HSP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACVM,MAAQ,CACNC,WAAY,GACZC,iBAAkB,GAClBC,eAAgB,GAChBC,QAAS,GACTC,YAAa,GACbC,WAAW,EACXC,UAAW,GACXC,QAAS,GACTC,SAAS,GACVpB,EAEDqB,iBAAmB,WACjBrB,EAAKsB,SAAS,CAAEL,WAAW,GAC7B,EAACjB,EAEDuB,iBAAmB,WACjBvB,EAAKsB,SAAS,CAAEL,WAAW,GAC7B,EAACjB,EAEDwB,mBAAqB,SAACC,GACpB,IAAMC,EAAQD,EAAEE,OAAOC,MAAMC,cAMvBC,EAAiB9B,EAAKW,MAAMC,WAAWmB,QAAO,SAACC,GACnD,IAAMC,GAAqBD,EAAUE,UAAY,IAAIL,cAC/CM,GACHnC,EAAKW,MAAMO,WACXc,EAAUI,oBAAsBJ,EAAUI,oBAAsBpC,EAAKW,MAAMO,UACxEmB,GACHrC,EAAKW,MAAMQ,SACXa,EAAUI,oBAAsBJ,EAAUI,oBAAsBpC,EAAKW,MAAMQ,QAG9E,OACEc,EAAkBK,SAASZ,IAAUS,GAAkBE,CAG3D,IAEArC,EAAKsB,SAAS,CACZQ,eAAAA,EAEAd,YAAaU,GAEjB,EAAC1B,EAEDuC,iBAAmB,SAACC,EAAOZ,GACzB5B,EAAKsB,UAAQmB,EAAAA,EAAAA,GAAC,CAAC,EACZD,EAAQZ,GAEb,EAAC5B,EAuBD0C,qBAAuB,SAACC,GACtB3C,EAAKsB,SAAS,CAAET,iBAAkB8B,EAAMhB,OAAOC,OACjD,EAAC5B,EAED4C,cAAgB,WAEd,IAAQd,EAAmB9B,EAAKW,MAAxBmB,eAUR,GAAIA,GAAkBA,EAAe1B,OAAS,EAAG,CAC/C,IAAMyC,EAAaf,EAAegB,KAAI,SAACC,GAAI,MAAM,CAC/CC,MAAMC,EAAAA,EAAAA,GAAO,IAAID,KAAKD,EAAKX,oBAAqB,uBAChDc,YAAaH,EAAKG,YAClBd,mBAAoBW,EAAKX,mBACzBe,cAAeJ,EAAKI,cACpBC,iBAAkBL,EAAKK,iBACvBC,MAAON,EAAKM,MACZC,WAAYP,EAAKO,WACjBC,qBAAsBR,EAAKQ,qBAC3BC,eAAgBT,EAAKS,eAErBC,UAAWV,EAAKU,UAChBC,iBAAkBX,EAAKW,iBACvBC,iBAAkBZ,EAAKY,iBACvBC,WAAYb,EAAKa,WACjBC,eAAgBd,EAAKc,eACrBC,WAAYf,EAAKe,WAEjBC,OAAQhB,EAAKgB,OACbC,WAAYjB,EAAKiB,WACjBC,KAAMlB,EAAKkB,KACX/B,SAAUa,EAAKb,SACfgC,SAAUnB,EAAKmB,SACfC,OAAQpB,EAAKoB,OAEd,IAEKC,EAAKC,EAAAA,GAAWC,cAAczB,GAC9B0B,EAAKF,EAAAA,GAAWG,WACtBH,EAAAA,GAAWI,kBAAkBF,EAAIH,EAAI,cACrCC,EAAAA,GAAeE,EAAI,kBACrB,CACF,EAACvE,CAAA,CA4LA,OA5LA0E,EAAAA,EAAAA,GAAA/E,EAAA,EAAAgF,IAAA,oBAAA/C,MAtED,WAAqB,IAADgD,EAAA,KACV/D,EAAqBgE,KAAKlE,MAA1BE,iBAEOA,GAAgB,+DAAAH,OACoCG,GAGnEiE,EAAAA,EACGC,IAAI,sDACJC,MAAK,SAACC,GACLL,EAAKtD,SAAS,CACZV,WAAYN,MAAM4E,QAAQD,EAASE,MAAQF,EAASE,KAAO,CAACF,EAASE,MACrE/D,SAAS,GAEb,IACCgE,OAAM,SAACC,GACNC,QAAQD,MAAM,uBAAwBA,GACtCE,MAAM,sBACR,GACJ,GAAC,CAAAZ,IAAA,SAAA/C,MAqDD,WAAU,IAAD4D,EAAA,KAEPC,EAA6EZ,KAAKlE,MAA1EC,EAAU6E,EAAV7E,WAAYkB,EAAc2D,EAAd3D,eAA6CV,GAAfqE,EAAd3E,eAA2B2E,EAAXzE,YAAoByE,EAAPrE,SAC3DsE,EAAiB9E,EAAWmB,QAAO,SAAC4D,GAAS,MAA0B,YAArBA,EAAU5B,MAAoB,IAEhF6B,EAAkBhF,EAAWmB,QACjC,SAACnB,GAAU,OAAKA,EAAWsB,UAA2C,KAA/BtB,EAAWsB,SAAS2D,MAAa,IAGlE5E,EAAc4D,KAAKlE,MAAnBM,UAER,OACE6E,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWF,SAAA,EAIxBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAACE,EAAAA,GAAO,CAACC,GAAG,iBAAgBJ,SAAA,CACzB,KACDF,EAAAA,EAAAA,KAACO,EAAAA,GAEC,CACAH,UAAU,OACVI,MAAO,CAAEC,UAAW,MAAOC,gBAAiB,WAAYR,SACzD,gBAIHF,EAAAA,EAAAA,KAACO,EAAAA,GACC,CACAI,KAAK,SACLH,MAAO,CAAEI,OAAQ,OAAQF,gBAAiB,WAC1CG,QAAS9B,KAAKjC,cAAcoD,SAC7B,qBAGDF,EAAAA,EAAAA,KAAA,SACEc,QAAQ,YACRN,MAAO,CAELO,YAAa,SACbC,SAAU,OACVC,WAAY,OACZC,WAAY,SACZ,4BAA6B,CAG3BF,SAAU,SAEZd,SACH,gBAGDF,EAAAA,EAAAA,KAAA,SACEW,KAAK,OACLQ,GAAG,YACHrF,MAAOiD,KAAKlE,MAAMO,UAClBgG,SAAU,SAACzF,GAAC,OAAK+D,EAAKjD,iBAAiB,YAAad,EAAEE,OAAOC,MAAM,EACnE0E,MAAO,CACLa,QAAS,MACTC,aAAc,MACdC,OAAQ,iBACRR,YAAa,OACbS,WAAY,OACZR,SAAU,WAGdhB,EAAAA,EAAAA,KAAA,SACEc,QAAQ,UACRN,MAAO,CACLO,YAAa,OACbC,SAAU,OACVC,WAAY,OACZC,WAAY,UACZhB,SACH,cAGDF,EAAAA,EAAAA,KAAA,SACEW,KAAK,OACLQ,GAAG,UACHrF,MAAOiD,KAAKlE,MAAMQ,QAClB+F,SAAU,SAACzF,GAAC,OAAK+D,EAAKjD,iBAAiB,UAAWd,EAAEE,OAAOC,MAAM,EACjE0E,MAAO,CACLa,QAAS,MACTC,aAAc,MACdC,OAAQ,iBACRR,YAAa,OACbC,SAAU,OACVS,aAAc,aAGlBzB,EAAAA,EAAAA,KAAA,SAAOc,QAAQ,aAAaN,MAAO,CAAEgB,WAAY,OAAQtB,UACvDF,EAAAA,EAAAA,KAAA,QAAM0B,KAAK,MAAM,aAAW,mBAE9BvB,EAAAA,EAAAA,MAAA,UACErE,MAAOiD,KAAK7D,YACZkG,SAAUrC,KAAKrD,mBACf8E,MAAO,CAELiB,aAAc,OACdJ,QAAS,MACTE,OAAQ,YACRD,aAAc,MACdK,WAAY,gCACZjB,gBAAiBvF,EAAY,UAAY,eAE3CyG,aAAc7C,KAAKxD,iBACnBsG,aAAc9C,KAAKtD,iBAAiByE,SAAA,EAEpCF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,qBACRF,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,WAAUoE,SAAC,cACzBF,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,WAAUoE,SAAC,cACzBF,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,YAAWoE,SAAC,eAC1BF,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,cAAaoE,SAAC,iBAC5BF,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,aAAYoE,SAAC,sBAG/BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,EAC9BC,EAAAA,EAAAA,MAAC2B,EAAAA,GAAK,CAAC1B,UAAU,eAAcF,SAAA,EAC7BF,EAAAA,EAAAA,KAAC+B,EAAAA,GAAK,CAAA7B,UACJC,EAAAA,EAAAA,MAAC6B,EAAAA,GAAE,CAAA9B,SAAA,EACDF,EAAAA,EAAAA,KAACiC,EAAAA,GAAE,CAACzB,MAAO,CAAE0B,UAAW,SAAUC,OAAQ,QAASjC,SAAC,kBACpDF,EAAAA,EAAAA,KAACiC,EAAAA,GAAE,CAACzB,MAAO,CAAE0B,UAAW,UAAWhC,SAAC,0BACpCF,EAAAA,EAAAA,KAACiC,EAAAA,GAAE,KACHjC,EAAAA,EAAAA,KAACiC,EAAAA,GAAE,CAACzB,MAAO,CAAE0B,UAAW,UAAWhC,SAAC,oBAEpCF,EAAAA,EAAAA,KAACiC,EAAAA,GAAE,CAACzB,MAAO,CAAE0B,UAAW,UAAWhC,SAAC,cACpCF,EAAAA,EAAAA,KAACiC,EAAAA,GAAE,CAACzB,MAAO,CAAE0B,UAAW,UAAWhC,SAAC,eACpCF,EAAAA,EAAAA,KAACiC,EAAAA,GAAE,CAACzB,MAAO,CAAE0B,UAAW,UAAWhC,SAAC,YACpCF,EAAAA,EAAAA,KAACiC,EAAAA,GAAE,CAACzB,MAAO,CAAE0B,UAAW,UAAWhC,SAAC,YACpCF,EAAAA,EAAAA,KAACiC,EAAAA,GAAE,CAACzB,MAAO,CAAE0B,UAAW,UAAWhC,SAAC,eAIxCC,EAAAA,EAAAA,MAACiC,EAAAA,GAAK,CAAAlC,SAAA,CACHnB,KAAKlE,MAAMI,UACV+E,EAAAA,EAAAA,KAACgC,EAAAA,GAAE,CAAA9B,UACDF,EAAAA,EAAAA,KAACqC,EAAAA,GAAE,CAACC,QAAQ,IAAGpC,SAAEnB,KAAKlE,MAAMI,aAG9B8D,KAAKlE,MAAMK,YACTc,EAAeC,QAAO,SAAC4D,GAAS,OAAKD,EAAepD,SAASqD,EAAU,IACvEC,EAAgB7D,QAAO,SAAC4D,GAAS,OAAKD,EAAepD,SAASqD,EAAU,KAC1E7C,KAAI,SAAC6C,GAAS,OACdM,EAAAA,EAAAA,MAAC6B,EAAAA,GAAE,CAAA9B,SAAA,EACDF,EAAAA,EAAAA,KAACqC,EAAAA,GAAE,CAAC7B,MAAO,CAAE0B,UAAW,UAAWhC,SAAEL,EAAUzC,eAC/C+C,EAAAA,EAAAA,MAACkC,EAAAA,GAAE,CAAC7B,MAAO,CAAE0B,UAAW,UAAWhC,SAAA,CAChC,IACA,IAAIhD,KAAK2C,EAAU3C,MAAMqF,yBAE5BvC,EAAAA,EAAAA,KAACqC,EAAAA,GAAE,KACHrC,EAAAA,EAAAA,KAACqC,EAAAA,GAAE,CAAC7B,MAAO,CAAE0B,UAAW,UAAWhC,SAAEL,EAAUxC,iBAE/C2C,EAAAA,EAAAA,KAACqC,EAAAA,GAAE,CAAC7B,MAAO,CAAE0B,UAAW,UAAWhC,SAAEL,EAAUzD,YAC/C4D,EAAAA,EAAAA,KAACqC,EAAAA,GAAE,CAAC7B,MAAO,CAAE0B,UAAW,UAAWhC,SAAEL,EAAUzB,YAC/C4B,EAAAA,EAAAA,KAACqC,EAAAA,GAAE,CAAC7B,MAAO,CAAE0B,UAAW,UAAWhC,SAAEL,EAAUxB,UAC/C2B,EAAAA,EAAAA,KAACqC,EAAAA,GAAE,CAAC7B,MAAO,CAAE0B,UAAW,UAAWhC,SAAEL,EAAU5B,UAC/C+B,EAAAA,EAAAA,KAACqC,EAAAA,GAAE,CAAC7B,MAAO,CAAE0B,UAAW,UAAWhC,UACjCF,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACC,GAAE,cAAA1F,OAAgBiF,EAAU2C,KAAOhC,MAAO,CAAEiC,MAAO,WAAYvC,UACtEF,EAAAA,EAAAA,KAAC0C,EAAAA,IAAM,UAfJ7C,EAAU2C,IAyBd,UAIVlH,IACC6E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,EAE/BF,EAAAA,EAAAA,KAAC2C,EAAAA,GAAQ,CAACF,MAAM,aAChBzC,EAAAA,EAAAA,KAAA,OAAKI,UAAU,SAAQF,SAAC,yBAOtC,KAACrG,CAAA,CA3TS,CAAS+I,EAAAA,WA6TrB,W","sources":["views/production/Production.js"],"sourcesContent":["import React from 'react'\r\nimport { format } from 'date-fns'\r\nimport * as XLSX from 'xlsx'\r\nimport { CContainer, CSpinner } from '@coreui/react'\r\n\r\n// import BDList from './BDList';\r\nimport axios from 'axios'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FaEdit } from 'react-icons/fa'\r\nimport {\r\n  CButton,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport '../assetTable/asset.css'\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table'\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css'\r\n\r\nclass BDList extends React.Component {\r\n  state = {\r\n    breakdowns: [],\r\n    selectedLocation: '',\r\n    searchLocation: '', // New state for the search term\r\n    message: '',\r\n    searchQuery: '',\r\n    isHovered: false,\r\n    startDate: '',\r\n    endDate: '',\r\n    loading: true,\r\n  }\r\n\r\n  handleMouseEnter = () => {\r\n    this.setState({ isHovered: true })\r\n  }\r\n\r\n  handleMouseLeave = () => {\r\n    this.setState({ isHovered: false })\r\n  }\r\n\r\n  handleSearchChange = (e) => {\r\n    const query = e.target.value.toLowerCase()\r\n\r\n    // Filter assets based on the search query\r\n    // const filteredAssets = this.state.breakdowns.filter((breakDown) => {\r\n    // const taskLocationLower = (breakDown.Location || '').toLowerCase()\r\n\r\n    const filteredAssets = this.state.breakdowns.filter((breakDown) => {\r\n      const taskLocationLower = (breakDown.Location || '').toLowerCase()\r\n      const startDateMatch =\r\n        !this.state.startDate ||\r\n        (breakDown.BreakdownStartDate && breakDown.BreakdownStartDate >= this.state.startDate)\r\n      const endDateMatch =\r\n        !this.state.endDate ||\r\n        (breakDown.BreakdownStartDate && breakDown.BreakdownStartDate <= this.state.endDate)\r\n\r\n      // return taskLocationLower.includes(query)\r\n      return (\r\n        taskLocationLower.includes(query) && startDateMatch && endDateMatch\r\n        // ... other conditions if needed\r\n      )\r\n    })\r\n\r\n    this.setState({\r\n      filteredAssets,\r\n      // searchLocation: e.target.value,\r\n      searchQuery: query,\r\n    })\r\n  }\r\n\r\n  handleDateChange = (field, value) => {\r\n    this.setState({\r\n      [field]: value,\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { selectedLocation } = this.state\r\n\r\n    const apiUrl = selectedLocation\r\n      ? `https://backendmaintenx.onrender.com/api/breakdown?location=${selectedLocation}`\r\n      : 'https://backendmaintenx.onrender.com/api/breakdown'\r\n\r\n    axios\r\n      .get('https://backendmaintenx.onrender.com/api/breakdown')\r\n      .then((response) => {\r\n        this.setState({\r\n          breakdowns: Array.isArray(response.data) ? response.data : [response.data],\r\n          loading: false,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error)\r\n        alert('Error fetching data')\r\n      })\r\n  }\r\n\r\n  handleLocationChange = (event) => {\r\n    this.setState({ selectedLocation: event.target.value })\r\n  }\r\n\r\n  exportToExcel = () => {\r\n    // const { breakdowns, searchLocation } = this.state\r\n    const { filteredAssets } = this.state\r\n    // const dataToExport = searchQuery ? filteredBreakdowns : breakdowns\r\n\r\n    // Filter data based on the selected plant\r\n    // const filteredData = searchLocation\r\n    //   ? breakdowns.filter((breakdown) => breakdown.Location === searchLocation)\r\n    //   : breakdowns\r\n\r\n    // const dataToExport = breakdowns\r\n    // const exportData = dataToExport.map((item) => ({\r\n    if (filteredAssets && filteredAssets.length > 0) {\r\n      const exportData = filteredAssets.map((item) => ({\r\n        Date: format(new Date(item.BreakdownStartDate), 'HH:mm:ss dd-MM-yyyy'),\r\n        MachineName: item.MachineName,\r\n        BreakdownStartDate: item.BreakdownStartDate,\r\n        BreakdownType: item.BreakdownType,\r\n        BreakdownEndDate: item.BreakdownEndDate,\r\n        Shift: item.Shift,\r\n        Operations: item.Operations,\r\n        BreakdownPhenomenons: item.BreakdownPhenomenons,\r\n        WhyWhyAnalysis: item.WhyWhyAnalysis,\r\n        // OCC: item.OCC,\r\n        RootCause: item.RootCause,\r\n        PreventiveAction: item.PreventiveAction,\r\n        CorrectiveAction: item.CorrectiveAction,\r\n        TargetDate: item.TargetDate,\r\n        Responsibility: item.Responsibility,\r\n        AttendedBy: item.AttendedBy,\r\n        // HD: item.HD,\r\n        Status: item.Status,\r\n        SpareParts: item.SpareParts,\r\n        Cost: item.Cost,\r\n        Location: item.Location,\r\n        LineName: item.LineName,\r\n        Remark: item.Remark,\r\n        // Status: item.Status,\r\n      }))\r\n\r\n      const ws = XLSX.utils.json_to_sheet(exportData)\r\n      const wb = XLSX.utils.book_new()\r\n      XLSX.utils.book_append_sheet(wb, ws, 'ReportData')\r\n      XLSX.writeFile(wb, 'reportdata.xlsx')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const { breakdowns, selectedLocation } = this.state\r\n    const { breakdowns, filteredAssets, searchLocation, searchQuery, loading } = this.state\r\n    const openBreakdowns = breakdowns.filter((breakdown) => breakdown.Status === 'pending')\r\n\r\n    const validatedAssets = breakdowns.filter(\r\n      (breakdowns) => breakdowns.Location && breakdowns.Location.trim() !== '',\r\n    )\r\n\r\n    const { isHovered } = this.state\r\n\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          {/* </div> */}\r\n          {/* <div className=\"table-controls\"> */}\r\n\r\n          <div>\r\n            <NavLink to=\"/breakdownForm\">\r\n              {' '}\r\n              <CButton\r\n                // color=\"info\"\r\n                // shape=\"rounded-pill\"\r\n                className=\"mb-2\"\r\n                style={{ marginTop: '5px', backgroundColor: '#000026' }}\r\n              >\r\n                Add New\r\n              </CButton>\r\n            </NavLink>\r\n            <CButton\r\n              // color=\"info\"\r\n              type=\"button\"\r\n              style={{ margin: '1rem', backgroundColor: '#000026' }}\r\n              onClick={this.exportToExcel}\r\n            >\r\n              Export to Excel\r\n            </CButton>\r\n            <label\r\n              htmlFor=\"startDate\"\r\n              style={{\r\n                // marginLeft: '20rem',\r\n                marginRight: '0.2rem',\r\n                fontSize: '16px',\r\n                fontWeight: 'bold',\r\n                whiteSpace: 'nowrap',\r\n                '@media (max-width: 750px)': {\r\n                  // marginLeft: '3rem',\r\n                  // marginRight: '0.8rem',\r\n                  fontSize: '14px',\r\n                },\r\n              }}\r\n            >\r\n              From Date:\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"startDate\"\r\n              value={this.state.startDate}\r\n              onChange={(e) => this.handleDateChange('startDate', e.target.value)}\r\n              style={{\r\n                padding: '6px',\r\n                borderRadius: '5px',\r\n                border: '1px solid #ccc',\r\n                marginRight: '10px',\r\n                marginLeft: '10px',\r\n                fontSize: '14px',\r\n              }}\r\n            />\r\n            <label\r\n              htmlFor=\"endDate\"\r\n              style={{\r\n                marginRight: '30px',\r\n                fontSize: '16px',\r\n                fontWeight: 'bold',\r\n                whiteSpace: 'nowrap',\r\n              }}\r\n            >\r\n              To Date:\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"endDate\"\r\n              value={this.state.endDate}\r\n              onChange={(e) => this.handleDateChange('endDate', e.target.value)}\r\n              style={{\r\n                padding: '6px',\r\n                borderRadius: '5px',\r\n                border: '1px solid #ccc',\r\n                marginRight: '10px',\r\n                fontSize: '14px',\r\n                marginBottom: '0.5rem',\r\n              }}\r\n            />\r\n            <label htmlFor=\"searchTask\" style={{ marginLeft: 'rem' }}>\r\n              <span role=\"img\" aria-label=\"search-icon\"></span>\r\n            </label>\r\n            <select\r\n              value={this.searchQuery}\r\n              onChange={this.handleSearchChange}\r\n              style={{\r\n                // marginLeft: '70%',\r\n                marginBottom: '20px',\r\n                padding: '8px',\r\n                border: '1px solid',\r\n                borderRadius: '4px',\r\n                transition: 'border-color 0.3s ease-in-out',\r\n                backgroundColor: isHovered ? '#f0f0f0' : 'transparent',\r\n              }}\r\n              onMouseEnter={this.handleMouseEnter}\r\n              onMouseLeave={this.handleMouseLeave}\r\n            >\r\n              <option>Search by Plant</option>\r\n              <option value=\"AAAPL-27\">AAAPL-27</option>\r\n              <option value=\"AAAPL-29\">AAAPL-29</option>\r\n              <option value=\"AAAPL- 89\">AAAPL- 89</option>\r\n              <option value=\"DPAPL - 236\">DPAPL - 236</option>\r\n              <option value=\" DPAPL- GN\"> DPAPL- GN</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"table-container\">\r\n            <Table className=\"custom-table\">\r\n              <Thead>\r\n                <Tr>\r\n                  <Th style={{ textAlign: 'center', height: '40px' }}>Machine Code</Th>\r\n                  <Th style={{ textAlign: 'center' }}>BreakDown Start Date</Th>\r\n                  <Th></Th>\r\n                  <Th style={{ textAlign: 'center' }}>Breakdown Type</Th>\r\n                  {/* <Th></Th> */}\r\n                  <Th style={{ textAlign: 'center' }}>Location</Th>\r\n                  <Th style={{ textAlign: 'center' }}>Line Name</Th>\r\n                  <Th style={{ textAlign: 'center' }}>Remark</Th>\r\n                  <Th style={{ textAlign: 'center' }}>Status</Th>\r\n                  <Th style={{ textAlign: 'center' }}>Edit</Th>\r\n                  {/* <CTableHeaderCell style={{ textAlign: 'center' }}>excel</CTableHeaderCell> */}\r\n                </Tr>\r\n              </Thead>\r\n              <Tbody>\r\n                {this.state.message && (\r\n                  <Tr>\r\n                    <Td colSpan=\"8\">{this.state.message}</Td>\r\n                  </Tr>\r\n                )}\r\n                {(this.state.searchQuery\r\n                  ? filteredAssets.filter((breakdown) => openBreakdowns.includes(breakdown))\r\n                  : validatedAssets.filter((breakdown) => openBreakdowns.includes(breakdown))\r\n                ).map((breakdown) => (\r\n                  <Tr key={breakdown._id}>\r\n                    <Td style={{ textAlign: 'center' }}>{breakdown.MachineName}</Td>\r\n                    <Td style={{ textAlign: 'center' }}>\r\n                      {' '}\r\n                      {new Date(breakdown.Date).toLocaleDateString()}\r\n                    </Td>\r\n                    <Td></Td>\r\n                    <Td style={{ textAlign: 'center' }}>{breakdown.BreakdownType}</Td>\r\n                    {/* <Td></Td> */}\r\n                    <Td style={{ textAlign: 'center' }}>{breakdown.Location}</Td>\r\n                    <Td style={{ textAlign: 'center' }}>{breakdown.LineName}</Td>\r\n                    <Td style={{ textAlign: 'center' }}>{breakdown.Remark}</Td>\r\n                    <Td style={{ textAlign: 'center' }}>{breakdown.Status}</Td>\r\n                    <Td style={{ textAlign: 'center' }}>\r\n                      <NavLink to={`/pbdStatus/${breakdown._id}`} style={{ color: '#000080' }}>\r\n                        <FaEdit />\r\n                      </NavLink>\r\n                    </Td>\r\n                    {/* <CButton\r\n                    type=\"button\"\r\n                    style={{ margin: '1rem', backgroundColor: 'grey' }}\r\n                    onClick={this.exportToExcel}\r\n                  >\r\n                    Export to Excel\r\n                  </CButton> */}\r\n                  </Tr>\r\n                ))}\r\n              </Tbody>\r\n            </Table>\r\n            {loading && (\r\n              <div className=\"loader-container\">\r\n                {/* <div className=\"loader\">Loading...</div> */}\r\n                <CSpinner color=\"primary\" />\r\n                <div className=\"loader\">Loading...</div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default BDList\r\n"],"names":["BDList","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","breakdowns","selectedLocation","searchLocation","message","searchQuery","isHovered","startDate","endDate","loading","handleMouseEnter","setState","handleMouseLeave","handleSearchChange","e","query","target","value","toLowerCase","filteredAssets","filter","breakDown","taskLocationLower","Location","startDateMatch","BreakdownStartDate","endDateMatch","includes","handleDateChange","field","_defineProperty","handleLocationChange","event","exportToExcel","exportData","map","item","Date","format","MachineName","BreakdownType","BreakdownEndDate","Shift","Operations","BreakdownPhenomenons","WhyWhyAnalysis","RootCause","PreventiveAction","CorrectiveAction","TargetDate","Responsibility","AttendedBy","Status","SpareParts","Cost","LineName","Remark","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","_createClass","key","_this2","this","axios","get","then","response","isArray","data","catch","error","console","alert","_this3","_this$state","openBreakdowns","breakdown","validatedAssets","trim","_jsx","_Fragment","children","_jsxs","className","NavLink","to","CButton","style","marginTop","backgroundColor","type","margin","onClick","htmlFor","marginRight","fontSize","fontWeight","whiteSpace","id","onChange","padding","borderRadius","border","marginLeft","marginBottom","role","transition","onMouseEnter","onMouseLeave","Table","Thead","Tr","Th","textAlign","height","Tbody","Td","colSpan","toLocaleDateString","_id","color","FaEdit","CSpinner","React"],"sourceRoot":""}